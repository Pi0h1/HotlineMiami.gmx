<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text strings.
text_EmptySpace = " "

text_OptionStart            = "START GAME"
text_OptionLevels           = "CONTINUE"
text_OptionLevelsDone       = "CHAPTERS"
text_OptionSettings         = "OPTIONS"
text_OptionQuit             = "EXIT GAME"

text_OptionController       = "360 GAMEPAD"
text_OptionBinds            = "KEY BINDS"
text_OptionVolume           = "VOLUME"
text_OptionAdvanced         = "ADVANCED"
text_OptionMusicCredits     = "MUSIC CREDITS"
text_OptionBack             = "BACK"


text_OptionYes              = "YES"
text_OptionNo               = "NO"

text_OptionOn               = "ON"
text_OptionOff              = "OFF"

text_OptionMusic            = "MUSIC"
text_OptionSurface          = "SURFACES"
text_OptionBlood            = "clear blood"
text_OptionAlienware        = "Alienware"

text_Warning                = "WARNING!"
text_ControllerWarning      = "PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?";
text_ControllerWarningNote  = "THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!";
text_SurfaceWarning         = "TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS";
text_WarningRAM             = "YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = 0; // Used for general commands.
coldir = 0; // Determinated variable used for switching colors.
// Sets the default x,y coordinates for the menu.
x = room_width / 2;
y = room_height / 3 - 12;
dir = random(10000);
repeats = 1;
// Alt is an array. It contains the options in the main menu.
alt[0] = text_OptionStart 
alt[1] = text_OptionLevels
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]=text_OptionLevelsDone
i=0
alt[2] = text_OptionSettings
alt[3] = text_OptionQuit

nextlevel = rmTutorial // Level that will play when ''START GAME'' is selected.
level = 0;
select = 0; // Select is which option is currently being hovered on.
rdir = 0;
c_amount = 0;
fade = 0;
volume = 1;
presstart = 0;
pressup = 0;
pressdown = 0;
pindex = 0;
alarm[0] = 45;
quit = 0;
repeat (10) {
my_id=instance_create(x,y,objPalmTree) // Generates ten palm trees.
with my_id {repeat (global.i*45) amount*=1.01}
global.i+=1
}

musicSetting = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Makes palm trees spawn every 45 seconds.
instance_create(x,y,objPalmTree)
alarm[0]=45</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if wait &gt; 0 wait -= 1
if !surface_exists(global.surf1) {
        global.surf1 = surface_create(room_width, room_height)
        if surface_exists(global.surf1) {
                surface_set_target(global.surf1)
                draw_clear_alpha(c_black, 0)
                surface_reset_target()
        }
}
//Keyboard Behaviour
if keyboard_check_pressed(ord(global.upkey))    event_perform(ev_keypress, ord('W'));
if keyboard_check_pressed(ord(global.downkey))  event_perform(ev_keypress, ord('S'));
if keyboard_check_pressed(ord(global.rightkey)) event_perform(ev_keypress, ord('D'));
if keyboard_check_pressed(ord(global.leftkey))  event_perform(ev_keypress, ord('A'));

if !surface_exists(global.surf1) exit
surface_set_target(global.surf1)
draw_clear_alpha(c_black, 0)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
i = 0
ii = 0
//Main menu font
draw_set_font(fntMenu)

musicSetting = "MUSIC " + string(round(global.musicVolume * 100)) + "%"

switch (level) {
case 0: MenuOptions(4,x,y+56,alt,false); break;     // Main Menu
case 1: MenuOptions(6,x,y+56,alt,false); break;     // Options
case 2: alt[0] = musicSetting;                      // Music
        MenuOptions(2,x,y+56,alt,false); break; 
case 3: txtImportantWarning(x,y+56,text_Warning);   // Gamepad
        txtWarning(x,y+85,text_ControllerWarning, text_ControllerWarningNote,fntWarning,true);
        draw_set_font(fntMenu);
        MenuOptionsHorizontal(2,160,y+56+60,alt); break;
case 4: SurfaceSettings(); break;                   // Advanced
}

draw_set_blend_mode(bm_normal)

draw3Dlogo();

surface_alpha()
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=2 {
if fade=1 or wait&gt;0 exit
wait=2
if select=0 {if global.musicVolume&lt;1 global.musicVolume+=0.01 sxeasy_setVolume(1)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=2 {
if fade=1 or wait&gt;0 exit
wait=2
if select=0 {if global.musicVolume&gt;0 global.musicVolume-=0.01 sxeasy_setVolume(1)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('D'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('A'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress, ord("S"))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress, ord("W"))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,vk_enter)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if file_exists(working_directory+"\mask.tmp") file_delete(working_directory+"\mask.tmp")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sxeasy_init(1);
global.steamon=0
steamdll_init()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ignore.
if coldir&lt;180 coldir+=2
if coldir&lt;90 coldir+=3

//Change these values
if coldir&lt;=90 color=merge_color(c_black,merge_color(c_white,c_fuchsia,abs(lengthdir_y(1,coldir))),abs(lengthdir_y(1,coldir)))
if coldir&gt;90 color=merge_color(c_fuchsia,c_aqua,abs(lengthdir_x(1,coldir)))
dir+=0.25

//''Color2'' is the main background
color2=c_black

//''Color1'' and ''Color3'' are both merger colours
color1=merge_color(c_black,merge_color(merge_color(c_fuchsia,c_aqua,0.5+lengthdir_x(0.5,dir*3.12)),c_red,0.125+lengthdir_y(0.125,dir*1.73)),0.75+lengthdir_y(0.25,dir*1.73))
global.color3=merge_color(merge_color(merge_color(c_blue,c_red,0.5+lengthdir_x(0.5,dir*3.12)),c_yellow,0.125+lengthdir_y(0.125,dir*1.73)),merge_color(c_white,c_fuchsia,0.5+lengthdir_x(0.3,dir)),0.5+lengthdir_x(0.5,dir*2.33))

draw_rectangle_color(-20,-20,room_width+20,room_height+20,color1,color1,color2,color2,0)
i=0
draw_set_blend_mode(bm_add)

//Sets the size of the palm trees
with objPalmTree {
draw_sprite_general(sprPalmTrees,image_index,0,0,82,256,room_width/2+amount,room_height*0.7-(320*(amount/240)),amount/240,(amount/120),0,global.color3,global.color3,c_black,c_black,image_alpha)
draw_sprite_general(sprPalmTrees,image_index,0,0,82,256,room_width/2-amount-(amount/240)*82,room_height*0.7-(320*(amount/240)),-amount/240,amount/120,0,global.color3,global.color3,c_black,c_black,image_alpha)
}

draw_set_blend_mode(bm_normal)
if surface_exists(global.surf1) {
draw_surface_ext(global.surf1,-1,0,1,1,0,c_black,1)
draw_surface_ext(global.surf1,0,1,1,1,0,c_black,1)
draw_surface_ext(global.surf1,0,-1,1,1,0,c_black,1)
draw_surface_ext(global.surf1,1,0,1,1,0,c_black,1)
draw_surface_ext(global.surf1,2,2,1,1,0,c_black,0.5)
draw_surface_ext(global.surf1,0,0,1,1,0,c_white,1)
} else {
    txtSimple(x,y,text_WarningRAM,fntScore,true);
}
view_angle[0]=lengthdir_y(3,dir*3.33)

//Transition between rooms
if fade=0 {
if c_amount&lt;180 {
c_amount+=10
color1=merge_color(c_black,merge_color(c_aqua,c_white,0.5+lengthdir_x(0.5,c_amount)),0.5+lengthdir_x(0.5,c_amount))
if c_amount&gt;90 color2=merge_color(c_black,merge_color(c_fuchsia,c_white,abs(lengthdir_y(1,c_amount))),abs(lengthdir_y(1,c_amount))) else color2=c_white
draw_set_blend_mode(bm_subtract)
draw_rectangle_color(view_xview[0]-10,view_yview[0]-10,view_xview[0]+view_wview[0]+10,view_yview[0]+view_hview[0]+10,color1,color2,color2,color1,0)
draw_set_blend_mode(bm_normal)
}
}

if fade=1 {
if c_amount&gt;0  {
c_amount-=5
if select=0 sxeasy_setVolume(c_amount*(1/180))
color1=merge_color(c_black,merge_color(c_aqua,c_white,0.5+lengthdir_x(0.5,c_amount)),0.5+lengthdir_x(0.5,c_amount))
if c_amount&gt;90 color2=merge_color(c_black,merge_color(c_fuchsia,c_white,abs(lengthdir_y(1,c_amount))),abs(lengthdir_y(1,c_amount))) else color2=c_white
draw_set_blend_mode(bm_subtract)
draw_rectangle_color(view_xview[0]-10,view_yview[0]-10,view_xview[0]+view_wview[0]+10,view_yview[0]+view_hview[0]+10,color2,color1,color1,color2,0)
draw_set_blend_mode(bm_normal)
} else {  {if select=0 {//global.sequence=rmSequence1 
sxeasy_stop() sxeasy_setVolume(0) //sxeasy_play(working_directory+"\ItsSafeNow.mp3") 
sxeasy_play(working_directory+"\Static.mp3")
room=nextlevel} if select=1 and level=1 room=rmControls//sxeasy_play(working_directory+choose("\Knock.mp3","\InnerAnimal.mp3","\Hotline.mp3","\Hydrogen.mp3","\Crystals.mp3")) room=rmChapter
if select=1 and level=0 room=rmLevelSelect if select=3 QuitGame();
}
}
}

d3d_set_projection_ortho(0,0,view_wview[0],view_hview[0],0)

draw_set_color(c_black)
draw_rectangle(-1,-1,room_width+1,15,0)
draw_rectangle(-1,room_height+1,room_width+1,room_height-15,0)

draw_set_color(c_white)
draw_set_font(fntDate)

scrDrawFilter();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&gt;0 select-=1 else select=3
}
if level=1 {
if select&gt;0 select-=1 else select=5
}
if level=2 {
if select&gt;0 select-=1 else select=1
}
if level=4 {
if select&gt;0 select-=1 else select=3
if select=1 and global.surfaces=1 select=0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&lt;3 select+=1 else select=0
}
if level=1 {
if select&lt;5 select+=1 else select=0
}
if level=2 {
if select&lt;1 select+=1 else select=0
}
if level=4 {
if select&lt;3 select+=1 else select=0
if select=1 and global.surfaces=1 select=2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.surfaces=!global.surfaces</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('S'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('D'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('W'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('A'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 exit
if level=0 {
file_delete(working_directory+"\skip") 
fade=1
select=3
}
if level=1 {
select=0
alt[0]=text_OptionStart
alt[1]=text_OptionLevels
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]=text_OptionLevelsDone
i=0
alt[2]=text_OptionSettings
alt[3]=text_OptionQuit
level=0
}

if level=2 or level=3 {
alt[0]=text_OptionController + text_EmptySpace
alt[1]=text_OptionBinds
alt[2]=text_OptionVolume
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
select=0
level=1
}

if level=4 {
alt[0]=text_OptionController + text_EmptySpace
alt[1]=text_OptionBinds
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
select=0
level=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=0 {
if select=0 {
{select=0
fade=1
scrInitScore()
}
}
if select=1 {
fade=1
scrInitScore()
}
if select=2 {
level=1
select=0
alt[0]=text_OptionController 
alt[1]=text_OptionBinds  
alt[2]=text_OptionVolume
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
exit
}
if select=3 {fade=1 file_delete(working_directory+"\skip")}
} 

if level=1 {
if select=0 {
alt[0]=text_OptionYes
alt[1]=text_OptionNo   
level=3
select=1
exit
}

if select=1 {
scrInitScore()
fade=1
}
if select=2 {
level=2
select=0
alt[0]=text_OptionMusic+" "+string(round(global.musicVolume*100))+"%"
alt[1]=text_OptionBack 
exit
}
if select=3 {
level=4
select=0
alt[0]=text_OptionSurface + text_EmptySpace
if global.surfaces=1 alt[0]+=text_OptionOn else alt[0]+=text_OptionOff
alt[1]=text_OptionBlood + text_EmptySpace
if global.blood=0 alt[1]+=string_lower(text_OptionOn) else alt[1]+=string_lower(text_OptionOff)
alt[2]=text_OptionAlienware + text_EmptySpace
if global.alienware=1 alt[2]+=text_OptionOn else alt[2]+=text_OptionOff
alt[3]=text_OptionBack
exit
}

if select=4 {
room_goto(rmBandCredits);
}

if select=5 {
select=0
alt[0]=text_OptionStart
alt[1]=text_OptionLevels
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]=text_OptionLevelsDone 
i=0
alt[2]=text_OptionSettings
alt[3]=text_OptionQuit
level=0
exit
}
}

if level=2 {
if select=1 {
scrSaveVol()
level=1
select=0
alt[0]=text_OptionController
alt[1]=text_OptionBinds
alt[2]=text_OptionVolume
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
}
}

if level=3 {
alt[0]=text_OptionController
alt[1]=text_OptionBinds
alt[2]=text_OptionVolume
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
level=1
select=0
}


if level=4 {
if select=0 {
global.surfaces=!global.surfaces if global.surfaces=1 {
global.blood=1 
if file_exists(working_directory+"\surfaces") file_delete(working_directory+"\surfaces") 
if file_exists(working_directory+"\blood") file_delete(working_directory+"\blood") 
} else {
file=file_text_open_write(working_directory+"\surfaces") file_text_close(file)
file=file_text_open_write(working_directory+"\blood") file_text_close(file)
}
}

if select=1 {
global.blood=!global.blood
if global.blood=1 { 
if file_exists(working_directory+"\blood") file_delete(working_directory+"\blood") 
} else {
file=file_text_open_write(working_directory+"\blood") file_text_close(file)
}
}
if select=2 global.alienware=!global.alienware
alt[0]=text_OptionSurface + text_EmptySpace
if global.surfaces=1 alt[0]+=text_OptionOn else alt[0]+=text_OptionOff
alt[1]=text_OptionBlood + text_EmptySpace
if global.blood=0 alt[1]+=string_lower(text_OptionOn) else alt[1]+=string_lower(text_OptionOff)
alt[2]=text_OptionAlienware + text_EmptySpace
if global.alienware=1 alt[2]+=text_OptionOn else alt[2]+=text_OptionOff
alt[3]=text_OptionBack
if select=3 {
level=1
select=0
alt[0]=text_OptionController
alt[1]=text_OptionBinds
alt[2]=text_OptionVolume
alt[3]=text_OptionAdvanced
alt[4]=text_OptionMusicCredits
alt[5]=text_OptionBack
exit
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
