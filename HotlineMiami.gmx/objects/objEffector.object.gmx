<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>objExporter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    scrInitXboxButtons();
alpha = 1;
coldir = 0;
amount = 0;
fade = 0;
my_y = 0;
global.dir = 0;
restart = 0;
update = 0;
dir = 0;
ammoy = -32;
next = 0;
showfinished = 0;
image_speed = 0.4;
action = 0;
wait = 0;
phonex = 0;
global.loaded = 0;
nextroom = room_next(room);
newsong = 0;
song = -1;
blackx = 0;
bamount = 0;
width = display_get_width();
height = display_get_height();
global.mousex = (display_mouse_get_x() - width * 0.5) * (view_wview[0] / width);
global.mousey = (display_mouse_get_y() - height * 0.5) * (view_hview[0] / height);
vlastx = view_xview[0];
vlasty = view_yview[0];
global.enemy = -1234;
leveltitle = "";
levelshow = 240;
gridon = 0;
uzisnd = 0;
// Addresses used for display when level starts
if (instance_exists(objMaskMenu)) {
    switch (global.sequence) {
        case rmSequence1: leveltitle = "Brickell Metro Station"; break;
        case rmSequence2: leveltitle = "East 7th St"; break;
        case rmSequence3: leveltitle = "North West 184th St"; break;
        case rmSequence4: leveltitle = "South West 53rd Place"; break;
        case rmSequence5: leveltitle = "North West 24th St"; break;
        case rmSequence6: leveltitle = "South West 104th St"; break;
        case rmSequence7: leveltitle = "North West 151st Place"; break;
        case rmSequence8: leveltitle = "South East 122nd St"; break;
        case rmSequence9: leveltitle = "North East 165th "; break;
        case rmSequence10: leveltitle = "North East 24th St"; break;
        case rmSequence11: leveltitle = "East 7th St"; break;
        case rmSequence12: leveltitle = "South East 24th St"; break;
        case rmSequence13: leveltitle = "West 25th St"; break;
        case rmSequence14: leveltitle = "South 86th St"; break;
    }
}
if (instance_exists(objPlayerBiker)) { // This check is actually irrelevant but okay
    switch (global.sequence) {
        case rmNoodleShop: leveltitle = "North East 56th St"; break;
        case rmArcadeDownstairs: leveltitle = "South West 107th Place"; break;
        case rmPhoneHomEntranceBiker: leveltitle = "North West 342nd St"; break;
        case rmJanitors: leveltitle = "North 87th Place"; break;
    }
}

scrLockInEffectInit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox) {
    if (checkbutton(0, getid(5))) {
        if (!presstart) {
            presstart = 1;
            scrXboxEffectorStart();
        }
    } else presstart = 0;

    if (checkbutton(0, getid(6))) {
        if (!pressback) {
            pressback = 1;
            scrXboxEffectorPause();
        }
    } else pressback = 0;
}
// Play uzi sound for the waiters in Clean Hit (I believe this was done to not blast your eardrums when all of the waiters shoot at the player at once)
if (uzisnd) {
    uzisnd = 0;
    audio_play_sound(sndUzi, 0, false);
}
if (keyboard_check_pressed(ord(global.restartkey)))
    event_perform(ev_keypress, ord('R'));
SteamRunCallbacks();
// Load masks when dying on the first floor (due to how the checkpoint system works)
if (global.maskload) {
    scrLoadMask();
    global.maskload = 0;
    // Load mask abilities when player dies on the first floor
    with (objPlayer)
        scrGetMaskPowers();
}

if (global.loaded) {
    scrLoadAchievements();
    if (room == rmSwatUpstairs) {
        audio_stop_sound(sndPolice);
        // If player restarts during the police section of crackdown, set music back to crystals
        if (file_exists(working_directory + "\restartmusic")) {
            sxeasy_play(working_directory + "\Crystals.mp3");
            sxeasy_setVolume(1);
            file_delete(working_directory + "\restartmusic");
            scrCheckpoint();
        }
    }
    scrLoadBonusList();
    
    with (objSurfacer) {
        scrSurfaceTiles();
    }
    
    // I think this generates a new weapon when dying and restarting?
    with (objWeapon) {
        if (object_index == objSpecificWeapon) {
            // do nothing
        } else {
            instance_create(x, y, objWeapon);
            instance_destroy();
        }
    }
    leveltitle = "";
    levelshow = 120;
    global.loaded = 0;
    
    if (global.maskindex == 9)
        objPlayer.energie = 1;
    if (global.maskindex == 21)
        objPlayer.energie = 2;
}
scrCheckMissionComplete();

if (!fade) {
    if (amount &lt; 180) {
        amount += 5;
    }
}

if (fade) {
    if (amount &gt; 0) {
        amount -= 10;
        if (restart || newsong || (room == rmSwatUpstairs &amp;&amp; instance_exists(objSwat) &amp;&amp; instance_exists(objPlayerDead))) {
            sxeasy_setVolume(amount * (1 / 180));
        }
    } else {
        fade = 0;
        if (restart) {
            if (file_exists(working_directory + "\restartmusic"))
                file_delete(working_directory + "\restartmusic");
            sxeasy_stop(1);
            sxeasy_setVolume(0);
            bgm_Close();
            game_restart();
        } else {
            if (next) {
                if (file_exists(working_directory + "\restartmusic"))
                    file_delete(working_directory + "\restartmusic");
                    if (newsong) {
                        sxeasy_stop(1);
                        sxeasy_setVolume(0);
                        sxeasy_play(song);
                    }
                room = nextroom;
            } else {
                if (room == rmSwatUpstairs &amp;&amp; file_exists(working_directory + "\restarmusic")) {
                    sxeasy_stop(1);
                    bgm_Unload(global.currentsong);
                }
                scrResetSurfaces();
                game_load(working_directory + "\tempsave.sav");
            }
        }
    }
}

vlastx = view_xview[0];
vlasty = view_yview[0];

// Screen shake code
if (global.shake &gt; 0) {
    global.shake -= 0.5;
    if (global.xbox)
        setrumble(0, 0, global.shake * (1 / 15) * 65535);
    view_xview[0] += -global.shake * 0.33 + random(global.shake * 0.66);
    view_yview[0] += -global.shake * 0.33 + random(global.shake * 0.66);
}

scrLockInEffectStep();;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objMaskMenu)) {
    // Oscar's Darken Room Effect
    if (global.maskindex == 14)
        bamount = 1;
}
scrSaveBonusList();
i = 0;
room_set_persistent(room, true);
room_persistent = true;
if (!global.paused) {
    scrInitPathFinding();
    if (!instance_exists(objMaskMenu))
        scrCheckpoint();
} else global.paused = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (gridon ) {
    draw_set_alpha(0.25);
    mp_grid_draw(global.grid);
    draw_set_alpha(1);
}
if (instance_exists(objPlayer)) {
    width = display_get_width();
    height = display_get_height();
    factor = 1;
    if (global.xbox) {
        if (checkbutton(0, getid(9))) {
            global.mousex = objPlayer.x + rightthumb_x(0) * 0.009;
            global.mousey = objPlayer.y - rightthumb_y(0) * 0.006;
        } else {
            if (instance_exists(objPlayerShieldMouse)) {
                mousedir = objPlayer.dir;
                if (point_distance(0, 0, rightthumb_x(0), -rightthumb_y(0)) &gt; 12000) {
                    mousedir = point_direction(0, 0, rightthumb_x(0), -rightthumb_y(0));
                } else {
                    if (abs(objPlayer.myxspeed) + abs(objPlayer.myyspeed) &gt; 0.2) {
                        mousedir = point_direction(0, 0, objPlayer.myxspeed, objPlayer.myyspeed);
                    }
                }
                global.mousex = objPlayer.x + lengthdir_x(64, mousedir);
                global.mousey = objPlayer.y + lengthdir_y(64, mousedir);
            } else {
                if (objPlayer.object_index == objPlayerMouse || objPlayer.object_index == objPlayerMouseHouse || objPlayer.object_index == objPlayerBiker || objPlayer.object_index == objPlayerBikerHouse) {
                    global.mousex = objPlayer.x + lengthdir_x(64, objPlayer.dir);
                    global.mousey = objPlayer.y + lengthdir_y(64, objPlayer.dir);
                } else {
                    global.mousex = objPlayer.x global.mousey = objPlayer.y;
                }
            }
        }
    } else {
        if (keyboard_check_direct(vk_shift)) {
            factor = 1.8;
        }
        global.mousex = objPlayer.x + ((display_mouse_get_x() - width * 0.5) * (view_wview[0] / width)) * factor;
        global.mousey = objPlayer.y + ((display_mouse_get_y() - height * 0.5) * (view_hview[0] / height)) * factor;
    }
    x = global.mousex;
    y = global.mousey;
    if (instance_exists(global.enemy)) {
        global.mousex = global.enemy.x;
        global.mousey = global.enemy.y;
    } else global.enemy = -1234;
}
if (action &gt; 0) {
    image_blend = merge_color(merge_color(c_aqua, c_fuchsia, 0.5 + lengthdir_x(0.5, global.dir * 3.27)), c_white, 0.5 + lengthdir_y(0.5, global.dir * 1.97));
    draw_sprite_ext(sprCursorAction, action - 1, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5);
    draw_sprite_ext(sprCursorAction, action - 1, global.mousex, global.mousey, 1, 1, -view_angle[0], image_blend, 1);
}

if (room == rmHotelSuite) {
    with (objWindowV) {
        if (sprite_index == sprWindowSill) {
            // do nothing
        } else {
            if (x == 480 &amp;&amp; y == 256) {
                draw_sprite_ext(sprArrow, 0, x - 12 + lengthdir_x(3, objBackgroundColor.dir * 32), y + 16, 1, 1, 90, c_white, 1);
            }
        }
    }
}

// Draw cursor.
draw_sprite_ext(sprite_index, image_index, global.mousex + 1, global.mousey + 1, 1, 1, -view_angle[0], c_black, 0.5);
draw_set_blend_mode(bm_cursor);
draw_sprite_ext(sprite_index, image_index, global.mousex, global.mousey, 1, 1, -view_angle[0], c_cursor, 1);
draw_set_blend_mode(bm_normal);

with (objDiscoLights) {
    d3d_set_projection_ortho(0, 0, view_wview[0], view_hview[0], 0);
    draw_set_blend_mode(bm_subtract);
    draw_surface(surf, 0, 0);
}
draw_set_blend_mode(bm_normal);
if (!instance_exists(objMaskMenu) &amp;&amp; !instance_exists(objPhoneConversation))
    global.time++;
    
// Draw hud
scrDrawHUD();

// Draw mask menu
if (instance_exists(objMaskMenu)) {
    scrDrawMaskMenu();
} else {
    if (leveltitle == "") {
        // do nothing
    } else {
        // Render and animate address of level that displays when level starts
        if (levelshow &gt; 0)
            levelshow -= 1;
        else leveltitle = "";
        draw_set_font(fntDate);
        draw_set_halign(fa_center);
        draw_set_valign(fa_top);
        if (levelshow &gt; 180)
            draw_set_alpha((240 - levelshow) * (1 / 60));
        if (levelshow &lt; 60)
            draw_set_alpha(levelshow * (1 / 60));
        draw_set_color(c_black);
        draw_text(view_wview[0] / 2 + 1, view_hview[0] * 0.7 + 1, leveltitle);
        draw_set_color(c_white);
        draw_text(view_wview[0] / 2, view_hview[0] * 0.7, leveltitle);
        draw_set_alpha(1);
    }
}

if (!fade) {
    if (amount &lt; 180) {
        color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount));
        if (amount &gt; 90)
            color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)));
        else color2 = c_white;
        draw_set_blend_mode(bm_subtract);
        draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color1, color2, color2, color1, 0);
        draw_set_blend_mode(bm_normal);
    }
}

if (fade) {
    color1 = merge_color(c_black, merge_color(c_aqua, c_white, 0.5 + lengthdir_x(0.5, amount)), 0.5 + lengthdir_x(0.5, amount));
    if (amount &gt; 90)
        color2 = merge_color(c_black, merge_color(c_fuchsia, c_white, abs(lengthdir_y(1, amount))), abs(lengthdir_y(1, amount)));
    else color2 = c_white;
    draw_set_blend_mode(bm_subtract);
    draw_rectangle_color(-10, -10, view_wview[0] + 10, view_hview[0] + 10, color2, color1, color1, color2, 0);
    draw_set_blend_mode(bm_normal);
}
coldir++;

scrDrawPlayer();

// Render Oscar Darkness
if (global.maskindex == 14 &amp;&amp; global.maskon) {
    draw_set_blend_mode(bm_subtract);
    draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + 24 + random(24) + 24, merge_color(c_black, merge_color(c_white, c_aqua, 0.6 + lengthdir_x(0.4, global.dir * 4)), bamount), merge_color(c_black, c_white, bamount), 0);
    draw_set_blend_mode(bm_normal);
    if (bamount &lt; 1)
        bamount += 0.05;
}

draw_set_blend_mode(bm_subtract);
draw_circle_color(view_wview[0] / 2, view_hview[0] / 2, 240 + 24 + random(24) + 24, c_black, merge_color(c_navy, c_aqua, 0.25 + random(0.25)), 0);
draw_set_blend_mode(bm_normal);


if (instance_exists(objPlayerMouse)) {
    //view_xview[0] = vlastx;
    //view_yview[0] = vlasty;
}

if (blackx &gt; 0) {
    draw_set_color(c_black);
    draw_rectangle(0, 0, view_wview[0], blackx, 0);
    draw_rectangle(0, view_hview[0], view_wview[0], view_hview[0] - blackx * 1.5, 0);
    blackx -= 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    exit;
if (instance_exists(objPlayer)) {
    // do nothing
} else {
    scrSaveAchievements();
    fade = 1;
    next = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!fade &amp;&amp; amount == 180) {
    if (instance_exists(objPlayer)) {
        if (objPlayer.persistent)
            objPlayer.persistent = 0;
    }
    // Pause game by going to a new room
    global.lastroom = room;
    room_persistent = 1;
    screen_save(working_directory + "\pause.bmp");
    global.sprite = sprite_add(working_directory + "\pause.bmp", 0, 0, 0, 0, 1);
    room = rmPause;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
