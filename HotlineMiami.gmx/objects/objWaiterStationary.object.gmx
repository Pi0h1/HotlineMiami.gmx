<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWaiterWalkWine</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objWaiter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=speed*0.15
ammo=30
checkreload=10
reload=12
energie=0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if sprite_index=sprWaiterWalkWine or sprite_index=sprWaiterWalkFood {
speed=choose(0,1)
direction=random(360)
image_speed=speed*0.15
alarm[0]=100+random(300)
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrMoveSolidOn()
with objDoorV {
test=solid
solid=1
}
if !place_free(x+hspeed*4,y) hspeed=-hspeed
if !place_free(x,y+vspeed) vspeed=-vspeed
with objDoorV {
solid=test
}
scrMoveSolidOff()
if !instance_exists(objPlayer) exit
if sprite_index=sprWaiterWalkUzi {
speed=0
image_speed=0
check=scrLook(objPlayer.x,objPlayer.y,4)
if check=0 or check=2 {
direction=scrRotate(direction,point_direction(x,y,objPlayer.x,objPlayer.y),10)
if reload&gt;0 reload-=1 else {
if ammo&gt;0 {
ammo-=1
my_id=instance_create(x+lengthdir_x(24,direction),y+lengthdir_y(24,direction),objEBullet)
my_id.direction=direction-5+random(10)
my_id.speed=12
my_id.image_angle=my_id.direction
reload=2
audio_play_sound(sndUzi,0,false)
}
}
}
exit
}



if checkreload&gt;0 checkreload-=1 else {
checkreload=30
check=scrLook(objPlayer.x,objPlayer.y,4)
if check=0 or check=2 {
if sprite_index=sprWaiterWalkWine {
sprite_index=sprWaiterWalkUzi
my_id=instance_create(x+lengthdir_x(7,direction-65),y+lengthdir_y(7,direction-65),objWineBottle)
my_id.direction=direction-65
my_id.speed=2
my_id.friction=0.1
my_id.image_angle=image_angle
audio_play_sound(sndPickupWeapon,0,false)
}

if sprite_index=sprWaiterWalkFood {
sprite_index=sprWaiterWalkUzi
my_id=instance_create(x+lengthdir_x(7,direction-65),y+lengthdir_y(7,direction-65),objFoodTray)
my_id.direction=direction-65
my_id.speed=2
my_id.friction=0.1
my_id.image_angle=image_angle
audio_play_sound(sndPickupWeapon,0,false)
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.my_id=id
image_xscale=1.5
image_yscale=1.5
bullets=0
energie-=1+other.caliber
with objBullet {
if place_meeting(x,y,global.my_id) {
my_id=instance_create(x,y,objBloodSmoke)
my_id.direction=direction-170+random(10)
my_id.speed=1
my_id.image_angle=my_id.direction
my_id.image_xscale=0.8+random(0.2)
my_id.image_yscale=my_id.image_xscale
if caliber=0 instance_destroy()
global.my_id.bullets+=1
}
}
image_xscale=1
image_yscale=1
edir=other.direction
test=0
repeat (2*bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.sprite_index=sprBloodSplatSmall
my_id.direction=my_id.image_angle
my_id.speed=2+random(4)
}
repeat (1+random(bullets)) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.direction=my_id.image_angle
my_id.speed=1+random(5)
}
repeat (bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(16,edir),y-3+random(6)+lengthdir_y(16,edir),objBloodSmoke)
my_id.image_xscale=1.2-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=edir-20+random(40)
my_id.direction=my_id.image_angle
my_id.speed=2+random(1)
my_id.friction=0.15
}
if bullets&gt;1 or round(random(1)) or energie&lt;0 {
if sprite_index=sprEWalkUnarmed noweapon=1 else noweapon=0
global.punchonly=0
if noweapon=1 factor=0.5 else factor=1
my_id=instance_create(x,y-12,objScore)
my_id.text="+"+string(((100+bullets*20)+80*factor)*global.factor)+"pts"
global.myscore+=((100+bullets*20)+80*factor)*global.factor
global.killscore+=(100+bullets*20)
global.boldscore+=80*factor
global.combo+=1
global.combotime=240
global.killx[global.kills]=x
global.killy[global.kills]=y
global.kills+=1
global.gunkill+=1
my_id=instance_create(x,y,objDeadBody)
if bullets&gt;1 my_id.sprite_index=sprWaiterDeadShotgun else my_id.sprite_index=sprWaiterDeadMachinegun
my_id.image_index=1+floor(random(4))
my_id.direction=edir
my_id.speed=1.5+random(1)+bullets*0.15
my_id.image_angle=my_id.direction


if noweapon=0 {
my_id=instance_create(x,y,objWeaponThrow)
my_id.image_index=scrCurrentWeaponExt(sprite_index)
my_id.direction=other.direction-70+random(40)
my_id.speed=2+random(2)
my_id.ammo=ammo
}
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprWaiterLegs,image_index*2,x+1,y+1,image_xscale,image_yscale,direction,c_black,0.5)
draw_sprite_ext(sprite_index,image_index,x+1,y+1,image_xscale,image_yscale,direction,c_black,0.5)
draw_sprite_ext(sprWaiterLegs,image_index*2,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,direction,image_blend,image_alpha)</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
