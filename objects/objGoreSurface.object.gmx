<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(objSurfaceManager)
{
instance_create(x,y,objSurfaceManager)
}
groundsurf = -1
surf = -1
bodysurf = -1
scale = 2

var i = 0;
objects[i++] = objBloodPool
//objects[i++] = objBigBlood
//objects[i++] = objSmudge
objects[i++] = objBloodSplat
//objects[i++] = objTinyBlood
//objects[i++] = objSplat
objects[i++] = objShell
objects[i++] = objDebris
objects[i++] = objShard

var i = 0;
bodyobjects[i++] = objDeadBody
bodyobjects[i++] = objBodyPart

var i = 0;
groundobjects[i++] = objShirts
groundobjects[i++] = objJackets
groundobjects[i++] = objUnderwear
groundobjects[i++] = objShoes
groundobjects[i++] = objVinylRecord
groundobjects[i++] = objHomelessBed
groundobjects[i++] = objWetSpot
groundobjects[i++] = objPizza
groundobjects[i++] = objTrashbag

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(groundsurf) {
    groundsurf = surface_create(room_width * scale, room_height * scale)
    surface_set_target(groundsurf)
    draw_clear_alpha(0,0)
    surface_reset_target();
    if instance_exists(objSurfaceManager) {
        ds_list_add(objSurfaceManager.surflist, groundsurf)
    }
}

surface_set_target(groundsurf);

for (var i=0; i&lt;array_length_1d(groundobjects); i++) {
    var inst = groundobjects[i]
    with inst {
        //if done = 1 {
            x *= other.scale
            y *= other.scale
            image_xscale *= other.scale
            image_yscale *= other.scale
            draw_self()
            //event_perform(ev_draw, 0)
            instance_destroy()
        //}
    }
}

surface_reset_target();

if !surface_exists(surf) {
    surf = surface_create(room_width * scale, room_height * scale)
    surface_set_target(surf)
    draw_clear_alpha(0,0)
    surface_reset_target();
    if instance_exists(objSurfaceManager) {
        ds_list_add(objSurfaceManager.surflist, surf)
    }
}

surface_set_target(surf);

for (var i=0; i&lt;array_length_1d(objects); i++) {
    var inst = objects[i]
    with inst {
        if done = 1 {
            x *= other.scale
            y *= other.scale
            image_xscale *= other.scale
            image_yscale *= other.scale
            draw_self()
            //event_perform(ev_draw, 0)
            instance_destroy()
        }
    }
}

surface_reset_target();

if !surface_exists(bodysurf) {
    bodysurf = surface_create(room_width * scale, room_height * scale)
    surface_set_target(bodysurf)
    draw_clear_alpha(0,0)
    surface_reset_target();
    if instance_exists(objSurfaceManager) {
        ds_list_add(objSurfaceManager.surflist, bodysurf)
    }
}

surface_set_target(bodysurf);

for (var i=0; i&lt;array_length_1d(bodyobjects); i++) {
    var inst = bodyobjects[i]
    with inst {
        if done = 1 {
            x *= other.scale
            y *= other.scale
            image_xscale *= other.scale
            image_yscale *= other.scale
            draw_self()
            //event_perform(ev_draw, 0)
            instance_destroy()
        }
    }
}

surface_reset_target();


//------------------------

/*
surface_set_target(surf);

with objBloodPool if done=1 {
    x *= other.scale
    y *= other.scale
    image_xscale *= other.scale
    image_yscale *= other.scale
    draw_self();    
    instance_destroy()
}

surface_reset_target();

//Bodies
if !surface_exists(bodysurf) {
    bodysurf = surface_create(room_width * scale, room_height * scale)
    surface_set_target(bodysurf)
    draw_clear_alpha(0,0)
    surface_reset_target();
    if instance_exists(objSurfaceManager) {
    ds_list_add(objSurfaceManager.surflist, bodysurf)
}
}

surface_set_target(bodysurf);

with objDeadBody if done=1 {
    x *= other.scale
    y *= other.scale
    image_xscale *= other.scale
    image_yscale *= other.scale
    draw_self();    
    instance_destroy()
}

surface_reset_target();
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if surface_exists(groundsurf) {
    draw_surface_stretched(groundsurf,0,0,room_width,room_height)
}

if surface_exists(surf) {
    draw_surface_stretched(surf,0,0,room_width,room_height)
}

if surface_exists(bodysurf) {
    draw_surface_stretched(bodysurf,0,0,room_width,room_height)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
