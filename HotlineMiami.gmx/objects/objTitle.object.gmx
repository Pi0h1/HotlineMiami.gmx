<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//disable for steam version
//global.steamon=0

//Initialize Xbox Controls
global.xbox=0
scrInitXboxButtons()
if file_exists(working_directory+"\xbox") {
global.xbox=1
dllinit()
}

//Loads Volume.
global.mvol=1
global.svol=1
scrLoadVol()

//Used for general Commands
wait=0

//Colors for Alienware systems.
global.alienware=0
if file_exists(working_directory+"\alienware") {
global.alienware=1
scrAlienWareInit()
scrAlienWarePink()
} else global.alienware=0

//Loads Keys
global.controllertype=1
global.upkey='W'
global.downkey='S'
global.leftkey='A'
global.rightkey='D'
global.restartkey='R'
scrLoadKeys()

//Loads saved Masks
global.maskload=0

//Determinated variable used for switching colours
coldir=0

//Sets the default x,y cordenates
x=room_width/2
y=room_height/3-12
dir=random(10000)
repeats=1

//Introduces Globa Variable ''Shake''
global.shake=0

//Alt is an array wich contains the options in the main menu

//Start Game
alt[0]="START GAME"
scrLoadUnlocked()

//Will be ''Continue'' if the has not been completed: otherwise, level select
alt[1]="CONTINUE"
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]="CHAPTERS"
i=0

//Options Screen
alt[2]="OPTIONS"

//Exit game
alt[3]="EXIT GAME"


global.bonuslist=ds_list_create()
global.bonustime=0
global.newmasks=0

//Modifies this to be whats on screen once ''start game'' is selected
nextlevel=rmTutorial
level=0
select=0
rdir=0
global.paused=0
global.surf1=surface_create(room_width,room_height+64)
surface_set_target(global.surf1)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
global.surf2=surface_create(640*3,480*3)
surface_set_target(global.surf2)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
global.surf3=surface_create(640*3,480*3)
surface_set_target(global.surf3)
draw_clear_alpha(c_black,0)
surface_alpha()
surface_reset_target()
c_amount=0
fade=0
volume=1
presstart=0
pressup=0
pressdown=0
global.controller=0
pindex=0
alarm[0]=45
global.talked=1
global.i=0

//Generates ten palm trees.
repeat (10) {
my_id=instance_create(x,y,objPalmTree)
with my_id {repeat (global.i*45) amount*=1.01}
global.i+=1
}



global.surfaces=1
global.blood=1
if file_exists(working_directory+"\blood") global.blood=0
if file_exists(working_directory+"\surfaces") global.surfaces=0



global.surfacesprites=0
global.resetstory=0
global.comboflash=0
global.parttitle[0]="PART ONE."
global.parttitle[1]="PHONECALLS."
global.nextlevel=rmTutorial
global.sequence=rmSequence1
global.revisit=0
global.maskon=1
global.maskindex=0
quit=0
scrLoadAchievements()
scrCheckLetters()
scrCheckGuns()
scrCheckMasks()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Makes palm trees spawn every 45 seconds.
instance_create(x,y,objPalmTree)
alarm[0]=45</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if wait&gt;0 wait-=1

//Xbox Controls
if global.xbox=1 {
if checkbutton(0,getid(5)) {
if presstart=0 {
presstart=1
scrXboxMenuStart()
} 
} else presstart=0

if checkbutton(0,getid(6)) {
if pressback=0 {
pressback=1
scrXboxMenuQuit()
} 
} else pressback=0

if leftthumb_x(0)&gt;10000 {
if pressright=0 {
pressright=1
scrXboxMenuRight()
}
} else pressright=0

if leftthumb_x(0)&lt;-10000 {
if pressleft=0 {
pressleft=1
scrXboxMenuLeft()
}
} else pressleft=0

if leftthumb_y(0)&gt;10000 {
if pressup=0 {
pressup=1
scrXboxMenuUp()
}
} else pressup=0

if leftthumb_y(0)&lt;-10000 {
if pressdown=0 {
pressdown=1
scrXboxMenuDown()
}
} else pressdown=0

}

if !surface_exists(global.surf1) {
global.surf1=surface_create(room_width,room_height)
if surface_exists(global.surf1) {
surface_set_target(global.surf1)
draw_clear_alpha(c_black,0)
surface_reset_target()
}
}

//Keyboard Behaviour
if keyboard_check_pressed(ord(global.upkey)) event_perform(ev_keypress,ord('W'))
if keyboard_check_pressed(ord(global.downkey)) event_perform(ev_keypress,ord('S'))
if keyboard_check_pressed(ord(global.rightkey)) event_perform(ev_keypress,ord('D'))
if keyboard_check_pressed(ord(global.leftkey)) event_perform(ev_keypress,ord('A'))

//if checkbutton(0,getid(5)) room=rmControllerTest
if !surface_exists(global.surf1) exit
surface_set_target(global.surf1)
draw_clear_alpha(c_black,0)
draw_set_halign(fa_center)
draw_set_valign(fa_center)

i=0
ii=0

//Main menu font
draw_set_font(fntMenu)


if level=3 {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x+1,y+56,"WARNING!")
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x,y+56,"WARNING!")
draw_set_font(fntWarning)
draw_set_color(c_black)
draw_text(x+1,y+86,"PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?")
draw_text_color(x,y+85,"PLEASE UPDATE YOUR GAMEPAD DRIVERS#BEFORE ENABLING THIS FEATURE!#ARE YOU SURE YOU WANT TO PROCEED?",merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+90)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+180)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+270)),1)



draw_set_color(c_black)
draw_text(x+1,215,"THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
draw_set_color(c_white)
draw_text(x,214,"THE LATEST GAMEPAD DRIVERS CAN BE#DOWNLOADED FREE AT MICROSOFT.COM!")
draw_set_font(fntMenu)
start_x=160
repeat (2) {
if select=i {
repeats=6+lengthdir_x(5,dir*10)
repeat (repeats) {
draw_set_color(merge_color(c_fuchsia,c_white,ii*0.085))
draw_text(start_x+ii,y+56+60,alt[i])
ii+=1
}
} else {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(start_x+1,y+56+60+1,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(start_x,y+56+60,alt[i])
}
i+=1
start_x+=80
}
}



//Music slider
if level=2 {
alt[0]="MUSIC "+string(round(global.mvol*100))+"%"
repeat (2) {
if select=i {
repeats=6+lengthdir_x(5,dir*10)
repeat (repeats) {
draw_set_color(merge_color(c_fuchsia,c_white,ii*0.085))
draw_text(x+ii,y+56+i*20,alt[i])
ii+=1
}
} else {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x+1,y+56+i*20+1,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x,y+56+i*20,alt[i])
}
i+=1
}
}

if level=1 {
repeat (5) {
if select=i {
repeats=6+lengthdir_x(5,dir*10)
repeat (repeats) {
draw_set_color(merge_color(c_fuchsia,c_white,ii*0.085))
draw_text(x+ii,y+56+i*20,alt[i])
ii+=1
}
} else {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x+1,y+56+i*20+1,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x,y+56+i*20,alt[i])
}
i+=1
}
}

if level=0 {
repeat (4) {
if select=i {
repeats=6+lengthdir_x(5,dir*10)
repeat (repeats) {
draw_set_color(merge_color(c_fuchsia,c_white,ii*0.085))
draw_text(x+ii,y+56+i*20,alt[i])
ii+=1
}
} else {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x+1,y+56+i*20+1,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x,y+56+i*20,alt[i])
}
i+=1
}
}

if level=4 {
start_y=0

draw_set_font(fntWarning)
draw_set_color(c_black)
draw_text(x+1,y+80,"TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS")
draw_text_color(x,y+80,"TURN OFF IF YOU ARE GETTING STUCK#BETWEEN FLOORS AND CAN'T PROGRESS",merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+90)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+180)),merge_color(c_white,c_yellow,0.5+lengthdir_x(0.5,dir*10+270)),1)
draw_set_font(fntMenu)

repeat (4) {
if i==1 start_y+=28
if select=i {
repeats=6+lengthdir_x(5,dir*10)
repeat (repeats) {
draw_set_color(merge_color(c_fuchsia,c_white,ii*0.085))
draw_text(x+ii,y+56+i*20+start_y,alt[i])
ii+=1
}
} else {
if i=1 and global.surfaces=1 {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_gray,c_dkgray,amount))
draw_text(x+1,y+56+i*20+1+start_y,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_gray,c_dkgray,amount))
draw_text(x,y+56+i*20+start_y,alt[i])
} else {
amount=0.5+lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x+1,y+56+i*20+1+start_y,alt[i])
amount=0.5-lengthdir_x(0.5,dir*10)
draw_set_color(merge_color(c_white,c_aqua,amount))
draw_text(x,y+56+i*20+start_y,alt[i])
}
}
i+=1
}
}

draw_set_blend_mode(bm_normal)


if coldir&gt;90 {
i=0
times=lengthdir_x(40,dir*12)
if times&lt;1 times=1
repeat (1+(coldir-90)*0.4) {

//Colours of the text.
color2=merge_color(c_fuchsia,color,i*0.025)
color9=merge_color(c_red,c_white,i*0.025)

//Draws 3D Logo.
draw_sprite_ext(sprTitle,0,lengthdir_x(i*0.25,dir*4+180)+x+lengthdir_x(i*0.5,dir*4),lengthdir_y(i*0.25,dir*4+180)+y+lengthdir_y(i*0.5,dir*4),1,1,lengthdir_y(5,dir*4),color2,1)
if i&lt;times draw_sprite_ext(sprTitle,1,lengthdir_x(i*0.25,dir*4+180)+x+lengthdir_x(i*0.5,dir*4),lengthdir_y(i*0.25,dir*4+180)+y+lengthdir_y(i*0.5,dir*4),1,1,lengthdir_y(5,dir*4),color9,1)


/*draw_set_color(merge_color(c_fuchsia,color,i*0.025))
draw_text_transformed(x+lengthdir_x(i*0.5,dir*4),y+lengthdir_y(i*0.5,dir*4),title,1,1.5,lengthdir_y(5,dir*4))*/
i+=1
}
} else {
//draw_set_color(color)
draw_sprite_ext(sprTitle,0,x,y,1,1,lengthdir_y(5,dir*4),c_fuchsia,1)
//draw_text_transformed(x,y,title,1,1.5,lengthdir_y(5,dir*4))
}
surface_alpha()
surface_reset_target()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if level=2 {
if fade=1 or wait&gt;0 exit
wait=2
if select=0 {if global.mvol&lt;1 global.mvol+=0.01 sxeasy_setVolume(1)}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if level=2 {
if fade=1 or wait&gt;0 exit
wait=2
if select=0 {if global.mvol&gt;0 global.mvol-=0.01 sxeasy_setVolume(1)}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('D'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keyboard,ord('A'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,vk_enter)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//vcapture_init();
if file_exists(working_directory+"\mask.tmp") file_delete(working_directory+"\mask.tmp")</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sxeasy_init(1);
global.steamon=0
steamdll_init()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ignore.
if coldir&lt;180 coldir+=2
if coldir&lt;90 coldir+=3

//Change these values
if coldir&lt;=90 color=merge_color(c_black,merge_color(c_white,c_fuchsia,abs(lengthdir_y(1,coldir))),abs(lengthdir_y(1,coldir)))
if coldir&gt;90 color=merge_color(c_fuchsia,c_aqua,abs(lengthdir_x(1,coldir)))
dir+=0.25

//''Color2'' is the main background
color2=c_black

//''Color1'' and ''Color3'' are both merger colours
color1=merge_color(c_black,merge_color(merge_color(c_fuchsia,c_aqua,0.5+lengthdir_x(0.5,dir*3.12)),c_red,0.125+lengthdir_y(0.125,dir*1.73)),0.75+lengthdir_y(0.25,dir*1.73))
global.color3=merge_color(merge_color(merge_color(c_blue,c_red,0.5+lengthdir_x(0.5,dir*3.12)),c_yellow,0.125+lengthdir_y(0.125,dir*1.73)),merge_color(c_white,c_fuchsia,0.5+lengthdir_x(0.3,dir)),0.5+lengthdir_x(0.5,dir*2.33))

draw_rectangle_color(-20,-20,room_width+20,room_height+20,color1,color1,color2,color2,0)
i=0
draw_set_blend_mode(bm_add)

//Sets the size of the palm trees
with objPalmTree {
draw_sprite_general(sprPalmTrees,image_index,0,0,82,256,room_width/2+amount,room_height*0.7-(320*(amount/240)),amount/240,(amount/120),0,global.color3,global.color3,c_black,c_black,1)
draw_sprite_general(sprPalmTrees,image_index,0,0,82,256,room_width/2-amount-(amount/240)*82,room_height*0.7-(320*(amount/240)),-amount/240,amount/120,0,global.color3,global.color3,c_black,c_black,1)
}

draw_set_blend_mode(bm_normal)
if surface_exists(global.surf1) {
draw_surface_ext(global.surf1,-1,0,1,1,0,c_black,1)
draw_surface_ext(global.surf1,0,1,1,1,0,c_black,1)
draw_surface_ext(global.surf1,0,-1,1,1,0,c_black,1)
draw_surface_ext(global.surf1,1,0,1,1,0,c_black,1)
draw_surface_ext(global.surf1,2,2,1,1,0,c_black,0.5)
draw_surface_ext(global.surf1,0,0,1,1,0,c_white,1)
} else {
draw_set_font(fntScore) 
draw_set_valign(fa_top)
draw_set_halign(fa_center)
draw_set_color(c_black)
draw_text(x-1,y,"YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
draw_text(x+1,y,"YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
draw_text(x,y+1,"YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
draw_text(x,y-1,"YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
draw_set_color(c_white)
draw_text(x,y,"YOUR SYSTEM IS#OUT OF VIDEO MEMORY#PLEASE RESTART THE GAME!")
}
view_angle[0]=lengthdir_y(3,dir*3.33)

//Transition between rooms
if fade=0 {
if c_amount&lt;180 {
c_amount+=10
color1=merge_color(c_black,merge_color(c_aqua,c_white,0.5+lengthdir_x(0.5,c_amount)),0.5+lengthdir_x(0.5,c_amount))
if c_amount&gt;90 color2=merge_color(c_black,merge_color(c_fuchsia,c_white,abs(lengthdir_y(1,c_amount))),abs(lengthdir_y(1,c_amount))) else color2=c_white
draw_set_blend_mode(bm_subtract)
draw_rectangle_color(view_xview[0]-10,view_yview[0]-10,view_xview[0]+view_wview[0]+10,view_yview[0]+view_hview[0]+10,color1,color2,color2,color1,0)
draw_set_blend_mode(bm_normal)
}
}

if fade=1 {
if c_amount&gt;0  {
c_amount-=5
if select=0 sxeasy_setVolume(c_amount*(1/180))
color1=merge_color(c_black,merge_color(c_aqua,c_white,0.5+lengthdir_x(0.5,c_amount)),0.5+lengthdir_x(0.5,c_amount))
if c_amount&gt;90 color2=merge_color(c_black,merge_color(c_fuchsia,c_white,abs(lengthdir_y(1,c_amount))),abs(lengthdir_y(1,c_amount))) else color2=c_white
draw_set_blend_mode(bm_subtract)
draw_rectangle_color(view_xview[0]-10,view_yview[0]-10,view_xview[0]+view_wview[0]+10,view_yview[0]+view_hview[0]+10,color2,color1,color1,color2,0)
draw_set_blend_mode(bm_normal)
} else {  {if select=0 {//global.sequence=rmSequence1 
sxeasy_stop() sxeasy_setVolume(0) //sxeasy_play(working_directory+"\ItsSafeNow.mp3") 
sxeasy_play(working_directory+"\Static.mp3")
room=nextlevel} if select=1 and level=1 room=rmControls//sxeasy_play(working_directory+choose("\Knock.mp3","\InnerAnimal.mp3","\Hotline.mp3","\Hydrogen.mp3","\Crystals.mp3")) room=rmChapter
if select=1 and level=0 room=rmLevelSelect if select=3 room=rmBandCredits
}
}
}

d3d_set_projection_ortho(0,0,view_wview[0],view_hview[0],0)

draw_set_color(c_black)
draw_rectangle(-1,-1,room_width+1,15,0)
draw_rectangle(-1,room_height+1,room_width+1,room_height-15,0)

draw_set_color(c_white)
draw_set_font(fntDate)

draw_set_blend_mode(bm_subtract)
my_y=random(32)
draw_sprite_tiled(sprScanlines,0,0,my_y)
draw_set_blend_mode(bm_subtract)
draw_circle_color(view_wview[0]/2,view_hview[0]/2,240+random(24)+24,c_black,merge_color(c_navy,c_aqua,0.25+random(0.25)),0)
draw_set_blend_mode(bm_normal)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&gt;0 select-=1 else select=3
}
if level=1 {
if select&gt;0 select-=1 else select=4
}
if level=2 {
if select&gt;0 select-=1 else select=1
}
if level=4 {
if select&gt;0 select-=1 else select=3
if select=1 and global.surfaces=1 select=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 or wait&gt;0 exit
wait=3
repeats=0
if level=0 {
if select&lt;3 select+=1 else select=0
}
if level=1 {
if select&lt;4 select+=1 else select=0
}
if level=2 {
if select&lt;1 select+=1 else select=0
}
if level=4 {
if select&lt;3 select+=1 else select=0
if select=1 and global.surfaces=1 select=2
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=3 {
if fade=1 or wait&gt;0 exit
wait=3
if select=0 select=1 else select=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.surfaces=!global.surfaces</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('S'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('D'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('W'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress,ord('A'))</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if fade=1 exit
if level=0 {
file_delete(working_directory+"\skip") 
fade=1
select=3
}
if level=1 {
select=0
alt[0]="START GAME"
alt[1]="CONTINUE"
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]="CHAPTERS"
i=0
alt[2]="OPTIONS"
alt[3]="EXIT GAME"
level=0
}

if level=2 or level=3 {
alt[0]="360 PAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
select=0
level=1
}

if level=4 {
alt[0]="360 PAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
select=0
level=1
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if level=0 {
if select=0 {
{select=0 //level=1 
fade=1
scrInitScore()
}
}
if select=1 {
/*global.sequence=rmChapter
global.level=rmEurogamer
global.pretitle="Special Chapter"
global.title="EXPOSED"
global.sequence=rmEurogamer*/
//fade=1
//scrInitScore()
fade=1
scrInitScore()
}
if select=2 {
level=1
select=0
alt[0]="360 GAMEPAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
//alt[3]="AlienWare "
//if global.alienware=1 alt[3]+="ON" else alt[3]+="OFF"
alt[4]="BACK"
//fade=1
//scrInitScore()
/*if global.controller=0 {
dllinit()
global.controller=1
alt[1]="PAD ON"
}
else {
dllfree()
global.controller=0
alt[1]="PAD OFF"
}*/
exit
}
//if select=2 {fade=1}
if select=3 {fade=1 file_delete(working_directory+"\skip")}
} 

if level=1 {
if select=0 {
if global.xbox=1 {
global.xbox=0
alt[0]="360 GAMEPAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
dllfree() 
if file_exists(working_directory+"\xbox") file_delete(working_directory+"\xbox")
} else {
alt[0]="YES"
alt[1]="NO"
level=3
select=1
exit
}
}
if select=1 {
scrInitScore()
fade=1
}
if select=2 {
level=2
select=0
alt[0]="MUSIC "+string(round(global.mvol*100))+"%"
alt[1]="BACK"
exit
}
/*if select=3 {
global.alienware=!global.alienware
alt[3]="AlienWare "
if global.alienware=1 {alt[3]+="ON" scrAlienWareInit() scrAlienWarePink() file=file_text_open_write(working_directory+"\alienware") 
file_text_close(file)} else {alt[3]+="OFF" scrAlienWareFree() if file_exists(working_directory+"\alienware") file_delete(working_directory+"\alienware")
}
}*/

if select=3 {
level=4
select=0
alt[0]="SURFACES "
if global.surfaces=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="clear blood "
if global.blood=0 alt[1]+="on" else alt[1]+="off"
alt[2]="AlienWare "
if global.alienware=1 alt[2]+="ON" else alt[2]+="OFF"
alt[3]="BACK"
exit
}

if select=4 {
select=0
alt[0]="START GAME"
alt[1]="CONTINUE"
i=0 repeat (20) {if global.levels[i]=1 i+=1}
if i=20 alt[1]="CHAPTERS"
i=0
alt[2]="OPTIONS"
alt[3]="EXIT GAME"
level=0
exit
}
}

if level=2 {
if select=1 {
scrSaveVol()
level=1
select=0
alt[0]="360 GAMEPAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
exit
}
}

if level=3 {
if select=0 global.xbox=1
if select=1 global.xbox=0
alt[0]="360 GAMEPAD "
if global.xbox=1 {alt[0]+="ON" dllinit() file=file_text_open_write(working_directory+"\xbox") file_text_close(file)} else {alt[0]+="OFF" dllfree() if file_exists(working_directory+"\xbox") file_delete(working_directory+"\xbox")}
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
level=1
select=0
}


if level=4 {
if select=0 {
global.surfaces=!global.surfaces if global.surfaces=1 {
global.blood=1 
if file_exists(working_directory+"\surfaces") file_delete(working_directory+"\surfaces") 
if file_exists(working_directory+"\blood") file_delete(working_directory+"\blood") 
} else {
file=file_text_open_write(working_directory+"\surfaces") file_text_close(file)
file=file_text_open_write(working_directory+"\blood") file_text_close(file)
}
}

if select=1 {
global.blood=!global.blood
if global.blood=1 { 
if file_exists(working_directory+"\blood") file_delete(working_directory+"\blood") 
} else {
file=file_text_open_write(working_directory+"\blood") file_text_close(file)
}
}
if select=2 global.alienware=!global.alienware
alt[0]="SURFACES "
if global.surfaces=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="clear blood "
if global.blood=0 alt[1]+="on" else alt[1]+="off"
alt[2]="AlienWare "
if global.alienware=1 alt[2]+="ON" else alt[2]+="OFF"
alt[3]="BACK"
if select=3 {
level=1
select=0
alt[0]="360 GAMEPAD "
if global.xbox=1 alt[0]+="ON" else alt[0]+="OFF"
alt[1]="CONTROLS"
alt[2]="VOLUME"
alt[3]="ADVANCED"
alt[4]="BACK"
exit
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
