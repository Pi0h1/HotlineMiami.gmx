<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If dev mode is active; what level should be tested?
testLevel = "FULL HOUSE";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Global Variables
GlobalVariables();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Local Variables

projectTitle    =   game_display_name + " (version "+string(GM_version)+")";
gameTitle       =   game_display_name;

uiScale         =   1.1; // Scale for the whole dev menu UI
messageAlpha    =   0; // Sets the default value for the opacity of the system message.

song            =   -1;
intro           =   0;
dir             =   0;
last_ammo       =   0;
last_sprite     =   0;


startingRoom    = "DEVOLVER"; // Sets the beginning room to the Devolver Digital splash screen.
if (global.devmode) {startingRoom = testLevel;} // Wait, is the game in developer mode? Then instead set the beginning room to whatever level the dev wants to test.


// To do: come up with a better names for these variables.
preview_name    =   "objUndefined"; // Sets a default name for the preview.
previewSprite   =   0;  // Sets a default value for the sprite preview.
previewX        =   32; // Sets the X coordinate for the object preview.
previewY        =   64; // Sets the Y coordinate for the object preview.
previewScale    =   0.5;// Sets the scale for the object preview.
preview_angle   =   0;  // Sets a default value for the object preview's angle.
preview_index   =   0;  // Sets a default value for the object preview's image_index.
preview_count   =   sprite_get_number(object_get_sprite(global.spawnObject)); // Sets the maximum amount of frames the sprite has
eraser_index    =   0;  // Sets a default value for the eraser sprite's image_index.
missingSprite   =   sprMissing; // Sets the missing sprite.
frameCounter    =   0; // Frame Index preview text string. (For example 0/1)
godToggle       =   "OFF" // This renders whether god mode is on or off.

color1  =   0;

temp1 = 120;
temp2 = 120;

devmenu = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create persistent objects.
object_create(objScanlines)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start a Room
switch (startingRoom) {
    case "DEVOLVER"  : room=rmSplashDevolver ; break;
// Phonecalls
    case "THE METRO" : scrStartLevel(0, rmTrainstationEntrance  , rmSequence1   , "Paris2"              ); break;
    case "NO TALK"   : scrStartLevel(1, rmApartment1Entrance    , rmSequence2   , "Crystals"            ); break;
    case "OVERDOSE"  : scrStartLevel(2, rmApartment2Entrance    , rmSequence3   , "Hotline"             ); break;
    case "DECADENCE" : scrStartLevel(3, rmHouse1Downstairs      , rmSequence4   , "Hydrogen"            ); break;
// Questions 
    case "TENSION"   : scrStartLevel(4, rmHouse5Downstairs      , rmSequence5   , "Paris2"              ); break;
    case "FULL HOUSE": scrStartLevel(5, rmHouse2Downstairs      , rmSequence6   , "Crystals"            ); break;
    case "CLEAN HIT" : scrStartLevel(6, rmHotelEntrance         , rmSequence7   , "Hotline"             ); break;
    case "NEIGHBORS" : scrStartLevel(7, rmBuildingFloor1        , rmSequence8   , "Hydrogen"            ); break;
// Visitations
    case "PUSH IT"   : scrStartLevel(8, rmHouse3Downstairs      , rmSequence9   , "Perturbator"         ); break;
    case "CRACKDOWN" : scrStartLevel(9, rmSwatDownstairs        , rmSequence10  , "Crystals"            ); break;
    case "HOT&amp;HEAVY" : scrStartLevel(10, rmHouse4Middle         , rmSequence11  , "Hotline"             ); break;
    case "DEADLINE"  : scrStartLevel(11, rmOfficeEntrance       , rmSequence12  , "Hydrogen"            ); break;
// Connection
    case "TRAUMA"    : scrStartLevel(12, rmHospitalTitle        , rmSequence12bDownstairs, "Flatline"   ); break;
    case "ASSAULT"   : scrStartLevel(13, rmPoliceHQFloor1       , rmSequence13  , "Knock"               ); break;
    case "VENGEANCE" : scrStartLevel(14, rmBossClubFloor1       , rmSequence14  , "InnerAnimal"         ); break;
    case "SHOWDOWN"  : scrStartLevel(15, rmMansionEntrance      , rmChapter     , "TurfMain"            ); break;
// Answers
    case "SAFEHOUSE" : scrStartLevel(16, rmNoodleShop           , rmMCBar       , "ToTheTop"            ); break;
    case "FUN&amp;GAMES" : scrStartLevel(17, rmArcadeDownstairs     , rmMCSequence2 , "Musikk2"             ); break;
    case "PRANKCALL" : scrStartLevel(18, rmPhoneHomEntranceBiker, rmMCSequence3 , "Knock"               ); break;
    case "RESOLUTION": scrStartLevel(19, rmJanitors             , rmMCSequence4 , "InnerAnimal"         ); break;
// Bonus
    case "HIGHBALL"  : scrStartLevel(20, rmHighballer           , rmChapter     , "Perturbator"         ); break;
    case "EXPOSED"   : scrStartLevel(21, rmEurogamer            , rmChapter     , "ToTheTop"            ); break;
    default: room = startingRoom;
}
sxeasy_play(song)
if (global.devmode) { SaveCurrentLevel(); }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Indexes
if instance_exists(objPlayerJacket  )   global.playerIndex=0
if instance_exists(objPlayerBiker   )   global.playerIndex=1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Discord Variables
discordId       = "";
DiscordUpdateInfo(
    "Playing "+gameTitle,
    room_get_name(room)
    )
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Discord Rich Presence - Initialize
np_initdiscord(discordId, false, 0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///                         Load discordId from text file (if one exists).
/*//===================================================================================================
    If your project's code is publicly viewable you might want to load the discordId from the textfile.
    This is only meant to be the case during the development, each time you make a build you're gonna
    want to hard code it in the previous Action ("Discord Variables").
    If your project's code isn't publicly viewable and you don't plan on that being the case you 
    can just leave it hard coded then.
*///===================================================================================================

var file = file_text_open_read("discordId.txt"); 
// This establishes that the text file "discordId.txt" will be refered to as "file".

if file &lt; 0 exit; 
// if "file" is less than 0 (it doesn't exist) then ignore the rest of this action.

discordId = file_text_read_string(file); // Set the discordId to the characters in the file.
file_text_close(file); // Stop reading from the file.
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text strings
if (!global.devmode) exit // If devmode is disabled don't do any of this.
text_WarningMenuName = "Dev Menu";
text_WarningOpenMenu = "Press [F3] to open Dev Menu";
text_WarningInstructions = ""; // The info here is dynamic; as such you can find it in the step event.
text_WarningMessage  = "Surface sucessfully destroyed.";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clock - Update 
t = date_current_datetime();    //  Store the current time.
h = date_get_hour(t);           //  Get the hour portion of that time.
m = date_get_minute(t);         //  Get the minute portion of the time.
s = date_get_second(t);         //  Get the second potion of the time.
time = string(h) + ":" + string(m) + ":" + string(s);
date = string(current_day) + "/" + string (current_month) + "/" + string(current_year) +". "
frameRate= string(fps) + " fps" +" | "+string(fps_real) + "framerate"

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Discord Rich Presence - Update
np_update();
np_setpresence (
    discordState,
    discordDetails, 
    "default",
    ""
    )
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dev Menu - Update

if global.godmode &gt; 0 { // If God Mode is not 0 that means god mode is on. as such godToggle should display equal to "ON",
godToggle = "ON"
}else{
godToggle = "OFF"
}

if preview_count&gt;1{
frameCounter="("+ string(preview_index+1) +"/"+ string(preview_count) + ")"
}else{
frameCounter="1"
}

text_WarningInstructions =
    "________________________________________________"
    +"#"+projectTitle
    +"#"+"Today is " + date + time 
    +"#"+frameRate
    +"#"+"________________________________________________"
    +"#"+"Room: "+room_get_name(room)
    +"#"+"SHIFT + C = CLEAR AREA"
    +"#"+"SHIFT + Z = +100 AMMO"
    +"#"+"SHIFT + E = TELEPORT"
    +"#"+"SHIFT + G = GOD MODE "+ godToggle
    +"#"+"SHIFT + U = DELETE ALL FURNITURE"
    +"#"+"________________________________________________"
    +"#"+"SHIFT + Q = SPAWN" + preview_name
    +"#"+"FRAME = " + frameCounter
    +"#"+"________________________________________________";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Object Preview Name - Update

/*//========================================================  
    If a letter is uppercase add a space before it.
    Remove the first tree letters of the object name.
    Then render all the text uppercase. 
    The end result is: if an object is called something
    like "objAcidBath"; it will be rendered as "ACID BATH".
*///======================================================== 
preview_name = string_upper(string_delete(
string_replace(string_replace(string_replace(string_replace(string_replace(string_replace(
string_replace(string_replace(string_replace(string_replace(string_replace(string_replace(
string_replace(string_replace(string_replace(string_replace(string_replace(string_replace(
string_replace(string_replace(string_replace(string_replace(string_replace(string_replace(
string_replace(string_replace(
object_get_name(global.spawnObject)
,"A"," A")
,"B"," B")
,"C"," C")
,"D"," D")
,"E"," E")
,"F"," F")
,"G"," G")
,"H"," H")
,"I"," I")
,"J"," J")
,"K"," K")
,"L"," L")
,"M"," M")
,"N"," N")
,"O"," O")
,"P"," P")
,"Q"," Q")
,"R"," R")
,"S"," S")
,"T"," T")
,"U"," U")
,"V"," V")
,"W"," W")
,"X"," X")
,"Y"," Y")
,"Z"," Z")
,1,3))
/*//========================================================
    End of this
*///========================================================
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Combinations
if devmenu=false exit
if keyboard_check(vk_shift) exit

if keyboard_check_pressed(ord("Q"))  {
    preview_index-=1
    if preview_index &lt;= 0 {
        preview_index = preview_count-1
    }
    devPlaySFX(sndPickUp)
}

if keyboard_check_pressed(ord("E"))  {
    preview_index+=1
    if preview_index &gt;= preview_count {
        preview_index=0
    }
    devPlaySFX(sndPickUp)
}

/*
x=floor( x / 16 ) * 16
y=floor( y / 16 ) * 16
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Combinations
if devmenu=false exit
if (global.devmode == 0) exit
if (!instance_exists(objEffector)) exit

if keyboard_check_pressed(ord("C")) {
    with objKillable instance_destroy();
}

if keyboard_check_pressed(ord("Z"))  {
    if instance_exists(objPlayer){
    objPlayer.ammo += 100;
    devPlaySFX(sndPickUp)
    }
}

if keyboard_check_pressed(ord("E"))  {
    if instance_exists(objPlayerJacket) and instance_exists(objEffector) {
        last_ammo=objPlayerJacket.ammo
        last_sprite=objPlayerJacket.sprite_index
        global.executionx=objPlayer.x
        global.executiony=objPlayer.y
        with objPlayerJacket instance_destroy();
        my_id=instance_create(objEffector.x,objEffector.y,objPlayerJacket);
        my_id.ammo=last_ammo
        my_id.sprite_index=last_sprite
        devPlaySFX(sndTeleport)
        effect_create_below(ef_ellipse, objEffector.x, objEffector.y, 1, c_aqua);
    }
}

if keyboard_check_pressed(ord("Q"))  {
my_id=instance_create(objEffector.x,objEffector.y,global.spawnObject);
my_id.image_angle=preview_angle

if global.spawnObject&gt;0{
    my_id.image_index=preview_index
}

devPlaySFX(sndHitWall)
}

if keyboard_check_pressed(ord("G"))  {
global.godmode=!global.godmode
}

if keyboard_check_pressed(ord("U"))  {
with objFurniture {
instance_destroy();
}
}


if keyboard_check_pressed(vk_escape)  {
with all game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Forward
if devmenu=false exit
if keyboard_check(vk_shift){
preview_angle+=10
}
else{
global.spawnObject+=1
preview_count=sprite_get_number(object_get_sprite(global.spawnObject))

if preview_index &gt;= preview_count {
        preview_index=0
    }
 if preview_index &lt;= 0 {
        preview_index = preview_count-1
    }
}

exit
if keyboard_check(vk_control){
temp1-=1
}else{
temp2-=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back
if devmenu=false exit
if keyboard_check(vk_shift){
preview_angle-=10
}
else{
global.spawnObject-=1
preview_count=sprite_get_number(object_get_sprite(global.spawnObject))

if preview_index &gt;= preview_count {
        preview_index=0
    }
 if preview_index &lt;= 0 {
        preview_index = preview_count-1
    }
}

exit
if keyboard_check(vk_control){
temp1+=1
}else{
temp2+=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw User Interface
if (global.devmode == false) exit //    if we're not in dev move, don't do any of the following. 
display_set_gui_size(view_wview[0]/(uiScale),view_hview[0]/(uiScale)); //   Set the scale for the interface.

if (!devmenu) {
txtDev(8,8,text_WarningOpenMenu,fntDescription,0.5); //  Draw the instruction text.
exit // if the dev menu is closed don't do any of the following.
}

//  Draw background.
devDrawWindow(sprUIRectangle,24,16,128,128);

if object_get_sprite(global.spawnObject) &gt; -1 {
    previewSprite = object_get_sprite(global.spawnObject); //  The object has a sprite? Cool, then set the variable previewSprite to the object's sprite.
} else {
    previewSprite = missingSprite; //  If not, set it to a missing sprite icon.
}

//  Draw Object Preview.
draw_sprite_shadow(previewSprite,preview_index,(previewX+temp1)*previewScale,(previewY+temp2)*previewScale,previewScale,previewScale,preview_angle);
//  Title.
txtHotline2(40,24,text_WarningMenuName,fntPointShow,0.50,c_aqua,c_red);
//  Information.
txtDev(32,40,text_WarningInstructions,fntDate,0.25);
//  System Message.
txtMessage(room_width/2,room_height/2,text_WarningMessage,fntHelvetica,1,messageAlpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Functionality

if messageAlpha&gt;0 messageAlpha-=0.01

if global.devmode=false exit
view_angle=0

if !instance_exists(objEffector) exit
if devmenu=false exit

// Draw Object Preview

draw_sprite_ext(previewSprite,preview_index,objEffector.x,objEffector.y,1,1,preview_angle,c_white,0.5)
color1 = merge_color(c_black,merge_color(merge_color(c_fuchsia,c_aqua,0.5+lengthdir_x(0.5,dir*3.12)),c_red,0.125+lengthdir_y(0.125,dir*1.73)),0.75+lengthdir_y(0.25,dir*1.73))
dir+=0.25;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///"Temporary" variables
// This are intended for help with positioning UI elements.
exit
txtDev(objEffector.x,objEffector.y,
"temp1 = " + string(temp1)
+"#"+
"temp2 = " + string(temp2)
,fntDate
,0.5
)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.devmode=!global.devmode;
event_perform(ev_create,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>devmenu=!devmenu
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
