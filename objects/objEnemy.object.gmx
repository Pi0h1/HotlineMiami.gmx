<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objKillable</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapons
if object_get_parent(object_index)=objEnemyIdle exit
if sprite_index=sprite0 sprite_index=choose(sprEWalkM16,sprEWalkShotgun,sprEWalkDoubleBarrel)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ammo
if sprite_index=sprEWalkShotgun ammo=6
if sprite_index=sprEWalkDoubleBarrel ammo=2
if sprite_index=sprEWalkSilencer ammo=13
if sprite_index=sprEWalkM16 ammo=24
if global.maskindex=10 ammo=ceil(ammo*1.33)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
scrERandomInit()
image_speed=0
image_index=random(1000)
angle=random(360)

direction=angle
speed = round(random(1))*delta
if room=rmTutorial {image_index=0 speed=0 direction=point_direction(x,y,objPlayer.x,objPlayer.y)}
image_speed=speed*0.1
alarm[0]=(60+random(60))*delta
energie=round(random(1))

checkreload=floor(random(30))
//ammo=24
alert=0
reload=13
light=0

weaponfind=0 
shake=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>start_x=x
start_y=y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clean up
if path_exists(path) {
path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=rmTutorial exit
if path_index&gt;0 or scrIsSearching(sprite_index) {alarm[0]=5 exit}
if alert=1 {alarm[0]=5 exit}
alarm[0]=(60+random(60))*delta
angle=random(360)
speed=(round(random(1)))*delta
image_speed=(speed*0.1)*delta
direction=angle
if speed=0 image_index=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = angle;
if x &lt; 0 hspeed = abs(hspeed);
if x &gt; room_width hspeed = -abs(hspeed);
if y &lt; 0 vspeed = abs(vspeed);
if y &gt; room_height vspeed = -abs(vspeed);

if (sprite_index == sprEWalkUnarmed)
{
    scrGoGetWeapon();
} 
else
{
    global.factor += sign(alert);
}

scrMoveSolidOn();

if !place_free(x + hspeed * 3, y + vspeed * 3)
{
    if !place_free(x + hspeed * 3, y) hspeed = -(hspeed) * delta
    if !place_free(x, y + vspeed * 3) vspeed = -(vspeed) * delta
}

if (path_index &gt;= 0)
{
    image_speed = (0.2) * delta
    if path_position = 1 path_end()
}
else
{
    image_speed = (speed * 0.1) * delta
}

scrMoveSolidOff();
if !instance_exists(objPlayer) 
{
    alert = 0;
    speed = 0;
    exit
}

scrERandomStep();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bullet collision
if (object_index == objEHideM16) 
{
    if (image_index &gt; 4) exit
}

var death_sprite = sprEBackMachinegun;
var dead = false;

if ((global.maskindex == 15) || (object_get_parent(object_index) == objEnemyIdle))
{
    energie = 0;
}

global.my_id = id;
if other.passed = 1 
{
    if (other.swat == 0)
    {
        ds_list_add(global.bonuslist, "Sneaky Shot")
        if (global.bonustime &lt; 12)
        {
            global.bonustime = 12
        }
    }
    if (object_get_parent(object_index) == objEnemyIdle) 
    {
        instance_destroy();
        my_id = instance_create(x, y, objEnemy);
        my_id.alert = 2;
        exit
    }
    global.my_x = other.dirx
    global.my_y = other.diry
    with objEnemy
    {
        if (scrCollisionLineExt(x, y, global.my_id.x, global.my_id.y, 4, objSolid, objDoorV, objWallSoft) == 0)
        {
            alert = 2;
            if sprite_index = sprEWalkUnarmed alert = 0;
            if (sprite_index == sprEWalkShotgun || sprite_index == sprEWalkSilencer || sprite_index == sprEWalkDoubleBarrel || sprite_index == sprEWalkSilencer)
            {
                checkreload = 50;
            }
            else
            {
                checkreload = 5;
            }
            reload = 10;
            chasex = global.my_x;
            chasey = global.my_y;
        }
    }
}

image_xscale = 1.5;
image_yscale = 1.5;
bullets = 0;
energie -= 1 + other.caliber;

with (objBullet)
{
    if (place_meeting(x, y, global.my_id))
    {
        my_id = instance_create(x, y, objBloodSmoke);
        my_id.direction = direction - 170 + random(10);
        my_id.speed = 1 * delta;
        my_id.image_angle = my_id.direction;
        my_id.image_xscale = 0.8 + random(0.2);
        my_id.image_yscale = my_id.image_xscale;
        if (!caliber)
        {
            instance_destroy();
        }
        global.my_id.bullets += 1;
    }
}

image_xscale = 1;
image_yscale = 1;

edir = other.direction;

if (point_distance(other.x, other.y, other.startx, other.starty) &gt; 150)
{
    if (other.swat = 0) 
    {
        ds_list_add(global.bonuslist, "Sharp Shooter")
        if (global.bonustime &lt; 12)
        {
            global.bonustime = 12;
        }
    }
}
test = 0;
repeat(2 * bullets) 
{
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.sprite_index = sprBloodSplatSmall;
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(4);
}
repeat(1 + random(bullets))
{
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.direction = my_id.image_angle;
    my_id.speed = (1 + random(5)) * delta;
}
repeat(bullets)
{
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(16, edir), y - 3 + random(6) + lengthdir_y(16, edir), objBloodSmoke);
    my_id.image_xscale = 1.2 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = edir - 20 + random(40);
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(1);
    my_id.friction = 0.15;
}

if (bullets &gt; 1 or round(random(1)) or energie &lt; 0) 
{
    dead = true;
}

if (dead)
{
    if (bullets &gt; 1)
    {
        death_sprite = choose(sprEBackShotgun, sprEBackShotgun, sprEFrontShotgun);
    }
    else
    {
        death_sprite = choose(sprEBackMachinegun, sprEBackMachinegun, sprEFrontMachinegun);
    }
    
    createDeadBody(false, 1.5 + bullets * 0.15, death_sprite, edir);
    instance_destroy();
    
    if !(other.swat)
    {
        global.punchonly = 0;
        if (noweapon)
        {
            factor = 0.5;
        }
        else
        {
            factor = 1;
        }
        my_id = instance_create(x, y - 12, objScore);
        my_id.text = "+" + string(((100) + 80 * factor) * global.factor) + "pts";
        global.myscore += ((100) + 80 * factor) * global.factor;
        global.killscore += (100);
        global.boldscore += 80 * factor;
        global.combo += 1;
        global.combotime = 240;
        global.killx[global.kills] = x;
        global.killy[global.kills] = y;
        global.kills += 1;
        global.gunkill += 1;
        if (global.bonustime &lt; 12 + global.factor * 4) {global.bonustime = 12 + global.factor * 4;}
        if (global.factor == 2) {ds_list_add(global.bonuslist, "Exposure");}
        if (global.factor == 3) {ds_list_add(global.bonuslist, "Double Exposure");}
        if (global.factor == 4) {ds_list_add(global.bonuslist, "Triple Exposure");}
        if (global.factor  &gt; 4) {ds_list_add(global.bonuslist, "Severe Exposure");}
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scrIsSearching(sprite_index) {
sprite_index=scrStopSearch(sprite_index)
image_speed=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ammo
if sprite_index=sprEWalkShotgun ammo=6
if sprite_index=sprEWalkDoubleBarrel ammo=2
if sprite_index=sprEWalkSilencer ammo=13
if sprite_index=sprEWalkM16 ammo=24
if global.maskindex=10 ammo=ceil(ammo*1.33)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if shake&gt;0 shake-=0.5
angle=direction

if light&gt;0 light-=1
draw_set_blend_mode(bm_add)
draw_circle_color(x,y,48+random(6)+light,make_color_hsv(0,0,30),c_black,0)
draw_set_blend_mode(bm_normal)
if scrIsSearching(sprite_index) nothing=1 else {
draw_sprite_ext(sprELegs,image_index*2,x,y,image_xscale,image_yscale,angle,image_blend,image_alpha)
}
draw_sprite_ext(sprite_index,image_index,x-shake+random(shake*0.5),y-shake+random(shake*0.5),image_xscale,image_yscale,angle,image_blend,image_alpha)
draw_set_color(c_white)
//draw_path(my_path,0,0,1)
lastsprite=sprite_index
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
