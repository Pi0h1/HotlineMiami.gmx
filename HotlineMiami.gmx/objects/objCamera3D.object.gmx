<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>32</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
debug = false;
target = noone;

eye_height = 45.5;

ready = false;

angle = 0;
pitch = 0;

xlook = 0;
ylook = 0;
zlook = 0;
lookdis = 0;

fov_desired = 75;
fov = 75;

if ( instance_exists( objPlayerMouse ) )
    angle = objPlayerMouse.dir;
else if ( instance_exists(objPlayer) )
{
    angle = objPlayer.direction;
}


xview = view_xview[0];
yview = view_yview[0];
wview = view_wview[0];
hview = view_hview[0];


view_mat = matrix_get( matrix_view );
billboard_mat = matrix_build( 0, 0, 0, 0, 0, 0, 1, 1, 1 );

//-------------

temp1 = -90;
temp2 = 0;

if !instance_exists(objCamera3DEnd) {
    instance_create(0,0,objCamera3DEnd);
}

floorz = 0;
ceilz = -80.5;

var tiles = tile_get_ids();

for ( var i = 0, count = array_length_1d( tiles ); i &lt; count; ++i )
{
    var tilez = tile_get_depth( tiles[i] );
    if ( tilez &lt; ceilz )
        tile_layer_depth( tilez, ceilz );
    else if ( tilez &gt; floorz )
        tile_layer_depth( tilez, floorz );
}

tile_layer_depth(1000000, floorz);
tile_layer_depth(100000, floorz);
tile_layer_depth(10000, floorz);
tile_layer_depth(1000, floorz);
tile_layer_depth(-99, ceilz);

// 

base_wallcolor = make_colour_rgb( 192, 192, 192 );





























</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera
xview = view_xview[0];
yview = view_yview[0];
wview = view_wview[0];
hview = view_hview[0];
if ( !global.camera3D )
    exit;
view_xview[0] = 0;
view_yview[0] = 0;
view_wview[0] = room_width;
view_hview[0] = room_height;

target = objCamera3DTarget;
if ( !instance_exists( target ) )
{
    if ( instance_exists( objPlayer ) )
    {
        target = objPlayer;
        fov = fov_desired;
        if ( keyboard_check( vk_shift ) )
        {
            fov = 55;
        }
    }
    else if ( instance_exists( objPlayerDead ) )
        target = objPlayerDead;
    else
        target = noone;
}
if ( instance_exists( target ) )
{
    x = target.x;
    y = target.y;
}


if ( instance_exists( objPlayerDead ) )
&amp;&amp; ( !instance_exists( objCamera3DTarget_PlayerDead ) )
{
    target = instance_create( objPlayerDead.x, objPlayerDead.y, objCamera3DTarget_PlayerDead );
    target.z = -40.5;
    target.angle = self.angle;
    target.pitch = self.pitch;
    
}
if ( instance_exists( objPlayerKill ) )
&amp;&amp; ( !instance_exists( objCamera3DTarget_PlayerKill ) )
{
    target = instance_create( objPlayerKill.x, objPlayerKill.y, objCamera3DTarget_PlayerKill );
    
}


/// Position 3D Camera

var instance = self.target;
if ( !instance_exists( instance ) )
    exit;

x = instance.x;
y = instance.y;

z = eye_height;
xlook = instance.x;
ylook = instance.y;
zlook = instance.depth;

fov = fov_desired;

lookdis = 256;

if ( object_is_ancestor( instance.object_index, objCamera3DTarget ) )
{
    // objCamera3DTarget instance
    x = instance.x;
    y = instance.y;
    z = instance.z;
    angle = instance.angle;
    pitch = clamp( instance.pitch, -89.995, 89.995 );
    var dcos_angle = dcos( angle );
    var dsin_angle = dsin( angle );
    var dcos_pitch = dcos( pitch );
    var dsin_pitch = dsin( pitch );
    zlook = z;
    
    xlook += ( lookdis * dcos_angle * dcos_pitch );
    ylook += ( lookdis * -dsin_angle * dcos_pitch );
    zlook += ( lookdis * dsin_pitch );
    
    fov = instance.fov;
    
}
else if ( true )
{
    // First person
    pitch = clamp( pitch, -89.995, 89.995 );
    var dcos_angle = dcos( angle );
    var dsin_angle = dsin( angle );
    var dcos_pitch = dcos( pitch );
    var dsin_pitch = dsin( pitch );
    
    x = instance.x;
    y = instance.y;
    z = -eye_height; // eye height
    xlook = x;
    ylook = y;
    zlook = z;
    lookdis = 32 * 16;
    xlook += ( lookdis * dcos_angle * dcos_pitch );
    ylook += ( lookdis * -dsin_angle * dcos_pitch );
    zlook += ( lookdis * dsin_pitch );
    // Aim cursor
    var _inst = noone;
    do
    {
        _inst = collision_line( x, y, xlook, ylook, objEnemy, false, false );
        if ( _inst )
        {
            lookdis *= 0.5;
        }
        else
            break;
    }
    until ( lookdis &lt;= 32 )
    if ( _inst != noone )
    {
        lookdis = point_distance( x, y, _inst.x, _inst.y ) - 4;
    }
    else
        lookdis = 8
    xlook = x;
    ylook = y;
    zlook = z;
    
    xlook += ( lookdis * dcos_angle * dcos_pitch );
    ylook += ( lookdis * -dsin_angle * dcos_pitch );
    zlook += ( lookdis * dsin_pitch );
}
else
{
    // Third person (old)
    x = instance.x;
    y = instance.y;
    z = instance.z;
    var distance = 128-20;
    z-=distance;
    distance2 = (distance*.75)-55-11-3-5+temp2
    y -= lengthdir_y(distance2,angle); //distance*.75;
    x -= lengthdir_x(distance2,angle); //
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( !global.camera3D )
    exit;

if ( window_has_focus() )
{
    // Mouse Aiming
    var _midx = floor(window_get_x()+(window_get_width() /2));
    var _midy = floor(window_get_y()+(window_get_height()/2));
    var xaim = ( display_mouse_get_x() - _midx );
    var yaim = ( display_mouse_get_y() - _midy );
    var sens = ( 1 / 12 );
    if ( ready )
    {
        angle = ( angle + 360 - ( xaim  * sens ) ) % 360;
        pitch = clamp( pitch + ( yaim * sens ), -90, 90 );
    }
    ready = true;
    display_mouse_set( _midx, _midy );
}
else
    ready = false;
if ( instance_exists( objCamera3DTarget ) )
{
    angle = objCamera3DTarget.angle;
    pitch = objCamera3DTarget.pitch;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_shift) {
    temp1-=1;
} else {
    temp2-=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_shift) {
    temp1+=1;
} else {
    temp2+=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !debug exit;
draw_set_font(-1);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_text(16,16,"temp1 = "+string(temp1));
draw_text(16,16+32,"temp2 = "+string(temp2));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( !global.camera3D )
    exit;


scrCamera3D( target );

world_mat = matrix_get( matrix_world );
view_mat = matrix_get( matrix_view );
//billboard_mat = matrix_build( 0, 0, 0, 0, angle + 90, 270, 1, 1, 1 );
    
///debug

with objEnemy
{
    // Marker
    
    var z = 0;
    var height = 50;
    var legheight = 25;
    var headheight = 8;
    var size = 0.25;
    var texid = -1;    
    
    var x1 = x-size;
    var y1 = y-size;
    var z1 = z-height;
    var x2 = x+size;
    var y2 = y+size;
    var z2 = z;
    
    draw_set_colour( c_aqua );
    d3d_draw_cylinder( x1, y1, z1, x2, y2, z2, texid, 1, 1, false, 4 );
    
    // Collision
    size = 8;
    x1 = x-size;
    y1 = y-size;
    z1 = z-height;
    x2 = x+size;
    y2 = y+size;
    z2 = z;
    // 
    draw_set_colour( c_white );
    // d3d_draw_block( x1, y1, z - ( 1 ), x2, y2, z, texid, 1, 1 );
    
    // Head
    var headsize = 8;
    size = headsize / 2;
    x1 = x-size;
    y1 = y-size;
    z1 = z-height;
    x2 = x+size;
    y2 = y+size;
    z2 = z;
    var sphere_z = ( ( z - height ) + ( size ) );
    if ( object_index == objEnemyFat )
        draw_set_color( make_color_rgb( 99, 56, 29 ) );
    else
        draw_set_color( make_color_rgb( 255, 228, 191 ) );
    d3d_draw_ellipsoid( x1, y1, sphere_z - size, x2, y2, sphere_z + size, texid, 1, 1, 12 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debug = !debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !keyboard_check(vk_shift) exit;
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
