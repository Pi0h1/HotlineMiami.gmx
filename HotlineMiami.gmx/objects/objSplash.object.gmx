<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coldir=0
dir=random(360)
startx=256
state=0
index1=7.5
index2=0
index3=12
index4=0
index5=0
index6=0
factor1=0
factor2=0
factor3=0
factor4=0
alpha=1
wait=50
wait2=20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sxeasy_setVolume(0);
sxeasy_play(working_directory+"\HorseSteppin.mp3");</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_projection_ortho(0,0,view_wview[0]*2,view_hview[0]*2,0)
if coldir&lt;180 coldir+=2
if coldir&lt;90 coldir+=3
if coldir&lt;=90 color=merge_color(c_black,merge_color(c_white,c_fuchsia,abs(lengthdir_y(1,coldir))),abs(lengthdir_y(1,coldir)))
if coldir&gt;90 color=merge_color(c_fuchsia,c_aqua,abs(lengthdir_x(1,coldir)))
dir+=0.25
color2=c_black
color1=merge_color(c_black,merge_color(merge_color(c_fuchsia,c_aqua,0.5+lengthdir_x(0.5,dir*3.12)),c_red,0.125+lengthdir_y(0.125,dir*1.73)),0.75+lengthdir_y(0.25,dir*1.73))
global.color3=merge_color(merge_color(merge_color(c_blue,c_red,0.5+lengthdir_x(0.5,dir*3.12)),c_yellow,0.125+lengthdir_y(0.125,dir*1.73)),merge_color(c_white,c_fuchsia,0.5+lengthdir_x(0.3,dir)),0.5+lengthdir_x(0.5,dir*2.33))
d3d_set_projection_ortho(0,0,view_wview[0],view_hview[0],0)
draw_rectangle_color(-20,-20,view_wview[0]+20,view_hview[0]+20,color1,color1,color2,color2,0)
view_angle[0]=lengthdir_y(3,dir*3.33)

draw_set_color(c_black)
draw_rectangle(-1,-1,view_wview[0]+1,7.5,0)
draw_rectangle(-1,view_hview[0]+1,view_wview[0]+1,view_hview[0]-7.5,0)


if state=0 {
if startx&gt;16 {
startx-=16 
draw_sprite_ext(splDennatonPieces,0,view_wview[0]/2+startx,view_hview[0]/2,1,1,0,image_blend,alpha)
draw_sprite_ext(splDennatonPieces,1,view_wview[0]/2-startx,view_hview[0]/2,1,1,0,image_blend,alpha)
} else {audio_play_sound(sndSplashFace,0,false) state=1}
}
index2+=0.2
if state&gt;0 {
i=0
repeat (4) {
draw_sprite_ext(splBullet,index2+i*3,view_wview[0]/2-3*i*factor1,view_hview[0]/2+3*i*factor1,(1+i*0.1)*factor1,(1+i*0.1)*factor1,(15+i*25*factor1),image_blend,alpha)
draw_sprite_ext(splBullet,index2+i*3,view_wview[0]/2+3*i*factor1,view_hview[0]/2+3*i*factor1,(1+i*0.1)*factor1,(1+i*0.1)*factor1,-(15+i*25*factor1),image_blend,alpha)
i+=1
}
if index3&lt;12 and index3&gt;0 {
draw_sprite_ext(splWaveComing,index3,view_wview[0]/2-1,view_hview[0]/2,1,1,0,c_black,alpha)
draw_sprite_ext(splWaveComing,index3,view_wview[0]/2+1,view_hview[0]/2,1,1,0,c_black,alpha)
draw_sprite_ext(splWaveComing,index3,view_wview[0]/2,view_hview[0]/2-1,1,1,0,c_black,alpha)
draw_sprite_ext(splWaveComing,index3,view_wview[0]/2,view_hview[0]/2+1,1,1,0,c_black,alpha)
draw_sprite_ext(splWaveComing,index3,view_wview[0]/2,view_hview[0]/2,1,1,0,image_blend,alpha)
}
if index3=0 {
if index4&lt;19 index4+=0.5
draw_sprite_ext(splSplashShift,index4,view_wview[0]/2,view_hview[0]/2,1,1,0,image_blend,alpha)
}
if factor2&gt;0 {
draw_sprite_ext(splSpeaker,0,view_wview[0]/2-factor2*4,view_hview[0]/2+10,factor2,factor2,factor2*12,image_blend,alpha)
draw_sprite_ext(splSpeaker,0,view_wview[0]/2+factor2*4,view_hview[0]/2+10,-factor2,factor2,-factor2*12,image_blend,alpha)
}
addx=-index1*0.25+random(index1*0.5)
addy=-index1*0.25+random(index1*0.5)
draw_sprite_ext(splDennatonFlash,index1,view_wview[0]/2+addx,view_hview[0]/2+addy-1,1,1,0,c_black,alpha)
draw_sprite_ext(splDennatonFlash,index1,view_wview[0]/2+addx,view_hview[0]/2+addy+1,1,1,0,c_black,alpha)
draw_sprite_ext(splDennatonFlash,index1,view_wview[0]/2+addx+1,view_hview[0]/2+addy,1,1,0,c_black,alpha)
draw_sprite_ext(splDennatonFlash,index1,view_wview[0]/2+addx-1,view_hview[0]/2+addy,1,1,0,c_black,alpha)
draw_sprite_ext(splDennatonFlash,index1,view_wview[0]/2+addx,view_hview[0]/2+addy,1,1,0,image_blend,alpha)
if index1&gt;0 index1-=0.5 else {if state=2 and factor2&gt;0.65 {state=3 audio_play_sound(sndSplashWave,0,false)} if factor2&lt;1 factor2+=0.05 else {if state=3 {audio_play_sound(sndSplashLogo,0,false) state=4} if index3&gt;0 index3-=1 if index5&lt;16 index5+=0.25 if index6&lt;37.6 index6+=0.7}}
if state=1 {audio_play_sound(sndSplashAmmo,0,false) state=2}
if factor1&lt;1 factor1+=0.03
}

if factor2&gt;=1 {
draw_sprite_ext(splDennatonTitle,index5,view_wview[0]/2,view_hview[0]/2+29,1,1,0,image_blend,alpha)
draw_sprite_ext(splGames,index6,view_wview[0]/2-1,view_hview[0]/2+41,1,1,0,c_black,alpha)
draw_sprite_ext(splGames,index6,view_wview[0]/2+1,view_hview[0]/2+41,1,1,0,c_black,alpha)
draw_sprite_ext(splGames,index6,view_wview[0]/2,view_hview[0]/2+41+1,1,1,0,c_black,alpha)
draw_sprite_ext(splGames,index6,view_wview[0]/2,view_hview[0]/2+41-1,1,1,0,c_black,alpha)
draw_sprite_ext(splGames,index6,view_wview[0]/2,view_hview[0]/2+41,1,1,0,merge_color(c_white,c_red,index6*(1/38)),alpha)
}


if index5&gt;=16 {
if wait&gt;0 wait-=1 else {
if state=4 {audio_play_sound(sndNoise,0,false) state=5}
draw_sprite_tiled(sprNoise,index2*2.5,0,0)
draw_set_color(c_black)
draw_rectangle(-1,-1,view_wview[0]+1,7.5,0)
draw_rectangle(-1,view_hview[0]+1,view_wview[0]+1,view_hview[0]-7.5,0)
if wait2&gt;0 wait2-=1 else {audio_stop_sound(sndNoise) room_goto_next()}
}
}



d3d_set_projection_ortho(0,0,view_wview[0]*2,view_hview[0]*2,0)
draw_set_blend_mode(bm_subtract)
my_y=random(32)
draw_sprite_tiled(sprScanlines,0,0,my_y)
draw_circle_color(view_wview[0],view_hview[0],240+random(24)+24,c_black,merge_color(c_navy,c_aqua,0.25+random(0.25)),0)
draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
