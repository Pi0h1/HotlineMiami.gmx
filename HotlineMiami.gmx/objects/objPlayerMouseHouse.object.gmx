<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPWalkUnarmed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xbox=1 scrInitXboxButtons()
image_speed=0
currentweapon=0
dir=0
aimon=1
viewspeed=0
reload=0
light=0
legdir=0
legindex=0
left=1
ammo=0
energie=1
throwreload=0
if global.controller=1 {instance_create(x,y,objPlayerController) instance_destroy()}
scrInitThrowPos()
scrInitMaskPos()
throwindex=0
alarm[0]=18
last_sprite=sprite_index
maskon=0
maskindex=0
previousx=x
previousy=y
active=1
if room=rmSequence13Downstairs active=0
myxspeed=0
myyspeed=0
myspeed=0

if room=rmSecretSewer {
maskon=1
maskindex=global.maskindex
global.maskon=1
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>previousx=x
previousy=y
if sprite_index=sprPHeadExplode { exit}
if room=rmSequence13Downstairs {
if active=0 {if y&gt;224 {y-=2 image_index+=0.2 legindex+=0.3} else active=1}
if sprite_index=sprPWalkUnarmed {with objBackgroundColorClear {instance_create(x,y,objBackgroundColor) instance_destroy()}}
}
if global.xbox=1 scrXboxPlayerMouseHouse()

global.test=0
with objWeapon {if point_distance(x,y,objPlayer.x,objPlayer.y)&lt;32 global.test=2}
if place_meeting(x,y,objKnockedOut) global.test=1
objEffector.action=global.test
if throwreload&gt;0 throwreload-=1
if instance_exists(objPhoneConversation) valid=0 else valid=1
if global.xbox=0 aimfar=keyboard_check_direct(vk_shift) else aimfar=checkbutton(0,getid(9))
factor=1
if aimfar and valid {
/*viewspeed=point_distance(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,x+lengthdir_x(96,dir),y+lengthdir_y(96,dir))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,x+lengthdir_x(96,dir),y+lengthdir_y(96,dir))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)*/

if global.xbox=1 {
viewx=objPlayer.x+rightthumb_x(0)*0.0045
viewy=objPlayer.y-rightthumb_y(0)*0.003
} else {
viewx=objPlayer.x+((display_mouse_get_x()-display_get_width()*0.5)*(view_wview[0]/display_get_width()))*factor
viewy=objPlayer.y+((display_mouse_get_y()-display_get_height()*0.5)*(view_hview[0]/display_get_height()))*factor
}

viewspeed=point_distance(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,viewx,viewy)*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,viewx,viewy)
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
vdist=point_distance(x,y,room_width/2,room_height/2)
vdir=point_direction(room_width/2,room_height/2,x,y)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
} else {
if objPlayer.active=0 and (instance_exists(objPhoneConversation) or instance_exists(objFocus)) {
if instance_exists(objLightingEngine) or instance_exists(objTutorialLight) {
with objLight {
if targetstrength=1 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}
}

with objBoss1 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objBoss1Down {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objClubOwner {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180)-32)
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objOldman {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

global.test=0
with objLight {if targetstrength=1 global.test=1}
if global.test=0 {
with objTutorialHobo {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objBoss4 {
if state=2 or state=4 or state=6 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objBodyguard {
if state=2 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objDeadTable {
if global.talked=2 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objBoss3Kneel {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objDreamPlayer {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objAssassinSitUzi {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objSacrifice {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objChief {
if global.locked=1 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objPrisoner {
if global.locked=0 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

if room=rmStore3 {

with objBoss2Corpse {
if state=1 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objPlayerMouseHouse {
test=1
if instance_exists(objBoss2Corpse) {
if objBoss2Corpse.state==1 test=0
}
if test {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

}

with objHobo {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objBoss2Crawl {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objGirlfriend {
if active=1 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objBoss2 {
valid=0
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

} else {
if active=1 or (!instance_exists(objPhone) and !instance_exists(objBoss4) and !instance_exists(objBossPhone) and !instance_exists(objTrain)) or instance_exists(objBodyguard) and !instance_exists(objPicture) {
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
} else {
with objPhone {
valid=0 
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objBossPhone {
valid=0 
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objTrain {
if visible=1 {
valid=0 
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}
}

with objPicture {
valid=0 
vdist=point_distance(x,y,room_width/2,room_height/2)
vdir=point_direction(room_width/2,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,x,y)*0.2
viewdir=point_direction(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/2,x,y)
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

with objBoss4 {
valid=0 
vdist=point_distance(x,y,room_width/2-(1-valid)*88,room_height/2)
vdir=point_direction(room_width/2-(1-valid)*88,room_height/2,x,y)
viewspeed=point_distance(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))*0.1
viewdir=point_direction(view_xview[0]+view_wview[0]/2-(1-valid)*88,view_yview[0]+view_hview[0]/2,x+lengthdir_x(vdist*0.2,vdir-180),y+lengthdir_y(vdist*0.2,vdir-180))
view_xview[0]+=lengthdir_x(viewspeed,viewdir)
view_yview[0]+=lengthdir_y(viewspeed,viewdir)
view_angle[0]=lengthdir_y(vdist*(1/160),vdir*2)
}

}
}
}
xview=view_xview[0]
yview=view_yview[0]
if persistent=1 and objEffector.fade=1 {
if place_free(x+addx,y) x+=addx
if place_free(x,y+addy) y+=addy
if image_speed=0 image_index+=0.15
legindex+=0.4
exit 
}

if active=1 scrPlayerMoveKeyboard()

if sprite_index=sprPAttackKnife or sprite_index=sprPAttackBat or sprite_index=sprPAttackPipe or sprite_index=sprPAttackClub or sprite_index=sprPAttackSword {
lastx=x
lasty=y
x+=lengthdir_x(24,dir)
y+=lengthdir_y(24,dir)
global.my_id=id
with objGlassPanelH {
if place_meeting(x,y,global.my_id) {
if global.my_id.lasty&lt;y+2 {
add=-1
} else {
add=1
}
i=0
repeat (24) {
my_id=instance_create(x+i*1.5,y,objShard)
my_id.speed=random(5)
my_id.direction=add*90-8+random(16)
i+=1
}
instance_create(x,y,objGlassPanelHBroken)
instance_destroy()
audio_play_sound(sndGlass1,0,false)
audio_play_sound(sndGlass2,0,false)
audio_play_sound(sndWeaponHit,0,false)
}
}


with objEnemy {
if place_meeting(x,y,objPlayer) {
mask_index=sprWeaponMask 
if scrCollisionLineExt(x,y,objPlayer.lastx,objPlayer.lasty,4,objSolid,objDoorV,objWallSoftH) {mask_index=sprMask objPlayer.x=objPlayer.lastx objPlayer.y=objPlayer.lasty exit}
mask_index=sprMask
my_id=instance_create(x,y-12,objScore)
if sprite_index=sprEWalkUnarmed {
my_id.text="+"+string((100)*global.factor)+"pts" 
global.myscore+=(100)*global.factor
} else {
my_id.text="+"+string((400)*global.factor)+"pts"
global.myscore+=(400)*global.factor
}
edir=point_direction(objPlayer.lastx,objPlayer.lasty,x,y)
repeat (8) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.sprite_index=sprBloodSplatSmall
my_id.direction=my_id.image_angle
my_id.speed=2+random(4)
}
repeat (2+random(3)) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.direction=my_id.image_angle
my_id.speed=1+random(5)
}
repeat (4) {
my_id=instance_create(x-3+random(6)+lengthdir_x(16,edir),y-3+random(6)+lengthdir_y(16,edir),objBloodSmoke)
my_id.image_xscale=1.2-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=edir-20+random(40)
my_id.direction=my_id.image_angle
my_id.speed=2+random(1)
my_id.friction=0.15
}
my_id=instance_create(x,y,objDeadBody)
if object_index=objDogPatrol {
if objPlayer.sprite_index=sprPAttackClub or objPlayer.sprite_index=sprPAttackBat or objPlayer.sprite_index=sprPAttackPipe {audio_play_sound(sndHit,0,false) my_id.sprite_index=sprDogDeadBlunt my_id.image_index=3+floor(random(3))} else {my_id.sprite_index=sprDogDeadCut audio_play_sound(choose(sndCut1,sndCut2),0,false) my_id.image_index=4+floor(random(3))}
} else {
if objPlayer.sprite_index=sprPAttackClub or objPlayer.sprite_index=sprPAttackBat or objPlayer.sprite_index=sprPAttackPipe {audio_play_sound(sndHit,0,false) my_id.sprite_index=sprEBackBlunt my_id.image_index=4+floor(random(11))} 
if objPlayer.sprite_index=sprPAttackKnife {my_id.sprite_index=sprEBackCut audio_play_sound(choose(sndCut1,sndCut2),0,false) my_id.image_index=2+floor(random(3))}
if objPlayer.sprite_index=sprPAttackSword {
my_id.sprite_index=sprEBackSlashed 
audio_play_sound(choose(sndCut1,sndCut2),0,false) 
audio_play_sound(sndHit,0,false) 
my_id.image_index=floor(random(4))
if my_id.image_index=0 {
part=instance_create(my_id.x+lengthdir_x(22,edir),my_id.y+lengthdir_y(18,edir),objBodyPart)
part.image_angle=edir-10+random(20)
part.direction=part.image_angle
part.speed=3+random(1)
}
if my_id.image_index=1 {
part=instance_create(my_id.x+lengthdir_x(12,edir),my_id.y+lengthdir_y(8,edir),objBodyPart)
part.image_angle=edir-10+random(20)
part.direction=part.image_angle
part.speed=3+random(1)
part.image_index=1
part.image_yscale=my_id.image_yscale
}
if my_id.image_index=2 {
part=instance_create(my_id.x+lengthdir_x(16,edir),my_id.y+lengthdir_y(12,edir),objBodyPart)
part.image_angle=edir-10+random(20)
part.direction=part.image_angle
part.speed=3+random(1)
part.image_index=2
part.image_yscale=my_id.image_yscale
}
}
}
my_id.direction=edir
my_id.speed=1.5+random(1)
my_id.image_angle=my_id.direction
if sprite_index=sprEWalkUnarmed or object_index=objDogPatrol noweapon=1 else noweapon=0
if noweapon=0 {
my_id=instance_create(x,y,objWeaponThrow)
my_id.direction=other.direction-70+random(40)
my_id.speed=2+random(2)
my_id.image_index=scrCurrentWeaponExt(sprite_index)
my_id.ammo=ammo
}
instance_destroy()
}
}
x=lastx
y=lasty
}



if sprite_index=sprPAttackPunch {
lastx=x
lasty=y
x+=lengthdir_x(12,dir)
y+=lengthdir_y(12,dir)

global.my_id=id
with objGlassPanelH {
if place_meeting(x,y,global.my_id) {
if global.my_id.lasty&lt;y+2 {
add=-1
} else {
add=1
}
i=0
repeat (24) {
my_id=instance_create(x+i*1.5,y,objShard)
my_id.speed=random(5)
my_id.direction=add*90-8+random(16)
i+=1
}
instance_create(x,y,objGlassPanelHBroken)
instance_destroy()
audio_play_sound(sndGlass1,0,false)
audio_play_sound(sndGlass2,0,false)
audio_play_sound(sndWeaponHit,0,false)
}
}

with objEnemy {
if object_index=objDogPatrol valid=0 else valid=1
if place_meeting(x,y,objPlayer) and valid=1 {
mask_index=sprWeaponMask 
if scrCollisionLineExt(x,y,objPlayer.lastx,objPlayer.lasty,4,objSolid,objDoorV,objWallSoftH) {mask_index=sprMask objPlayer.x=objPlayer.lastx objPlayer.y=objPlayer.lasty exit}
mask_index=sprMask
edir=point_direction(objPlayer.lastx,objPlayer.lasty,x,y)
audio_play_sound(sndDoorHit,0,false)
my_id=instance_create(x,y,objKnockedOut)
my_id.type=object_index
my_id.direction=edir-10+random(20)
my_id.angle=my_id.direction
with my_id move_outside_solid(angle-180,16)
my_id.speed=3
if sprite_index=sprEWalkUnarmed noweapon=1 else noweapon=0
if noweapon=0 {
global.test=0
with objEnemy if alert=1 global.test+=1
my_id=instance_create(x,y-12,objScore)
my_id.text="+"+string((300+200*global.test)*global.factor)+"pts"
global.myscore+=(300+200*global.test)*global.factor
my_id=instance_create(x,y,objWeaponThrow)
my_id.direction=direction-70+random(40)
my_id.image_index=scrCurrentWeaponExt(sprite_index)
my_id.speed=2+random(2)
my_id.ammo=ammo
}
instance_destroy()
}
}
x=lastx
y=lasty
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other {
if place_meeting(x,y,objSolid) {
move_outside_solid(direction-180,speed*2) 
if !place_meeting(x,y,objPlayer) exit
}
}
global.my_id=id
image_xscale=1.5
image_yscale=1.5
bullets=0
energie-=1
with objEBullet {
if place_meeting(x,y,global.my_id) {
my_id=instance_create(x,y,objBloodSmoke)
my_id.direction=direction-170+random(10)
my_id.speed=1
my_id.image_angle=my_id.direction
my_id.image_xscale=0.8+random(0.2)
my_id.image_yscale=my_id.image_xscale
instance_destroy()
global.my_id.bullets+=1
}
}
image_xscale=1
image_yscale=1
edir=other.direction
test=0
repeat (2*bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.sprite_index=sprBloodSplatSmall
my_id.direction=my_id.image_angle
my_id.speed=2+random(4)
}
repeat (1+random(bullets)) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.direction=my_id.image_angle
my_id.speed=1+random(5)
}
repeat (bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(16,edir),y-3+random(6)+lengthdir_y(16,edir),objBloodSmoke)
my_id.image_xscale=1.2-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=edir-20+random(40)
my_id.direction=my_id.image_angle
my_id.speed=2+random(1)
my_id.friction=0.15
}
if bullets&gt;1 or round(random(1)) or energie&lt;0 {
my_id=instance_create(x,y,objPlayerDead)
if bullets&gt;1 my_id.sprite_index=sprPBackShotgun else my_id.sprite_index=sprPBackMachinegun
my_id.image_index=1+floor(random(4))
my_id.direction=edir
my_id.speed=1.5+random(1)+bullets*0.15
my_id.image_angle=my_id.direction
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=rmSequence12b {
with other {
if place_meeting(x,y,objSolid) {
move_outside_solid(direction-180,speed*2) 
if !place_meeting(x,y,objPlayer) exit
}
}
global.my_id=id
image_xscale=1.5
image_yscale=1.5
bullets=0
energie-=1
with objEBullet {
if place_meeting(x,y,global.my_id) {
my_id=instance_create(x,y,objBloodSmoke)
my_id.direction=direction-170+random(10)
my_id.speed=1
my_id.image_angle=my_id.direction
my_id.image_xscale=0.8+random(0.2)
my_id.image_yscale=my_id.image_xscale
instance_destroy()
global.my_id.bullets+=1
}
}
image_xscale=1
image_yscale=1
edir=other.direction
test=0
repeat (2*bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.sprite_index=sprBloodSplatSmall
my_id.direction=my_id.image_angle
my_id.speed=2+random(4)
}
repeat (1+random(bullets)) {
my_id=instance_create(x-3+random(6)+lengthdir_x(8,edir),y-3+random(6)+lengthdir_y(8,edir),objBloodDrop)
my_id.image_xscale=1-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=point_direction(x+lengthdir_x(8,edir),y+lengthdir_y(8,edir),my_id.x,my_id.y)
my_id.direction=my_id.image_angle
my_id.speed=1+random(5)
}
repeat (bullets) {
my_id=instance_create(x-3+random(6)+lengthdir_x(16,edir),y-3+random(6)+lengthdir_y(16,edir),objBloodSmoke)
my_id.image_xscale=1.2-random(0.2)
my_id.image_yscale=my_id.image_xscale
my_id.image_angle=edir-20+random(40)
my_id.direction=my_id.image_angle
my_id.speed=2+random(1)
my_id.friction=0.15
}
if bullets&gt;1 or round(random(1)) or energie&lt;0 {
my_id=instance_create(x,y,objPlayerDead)
my_id.sprite_index=sprPBackMachinegun
my_id.image_index=4
my_id.direction=edir
my_id.speed=1.5+random(1)+bullets*0.15
my_id.image_angle=my_id.direction
instance_destroy()
}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if persistent=1 and objEffector.fade=1 exit
if instance_exists(objPhoneConversation) exit
if active=0 exit
scrMoveSolidOn()
if place_free(x,y-3) {y-=3-keyboard_check_direct(vk_shift)} else {
if place_free(x-6,y-3) x-=3-keyboard_check_direct(vk_shift) else {
if place_free(x+6,y-3) x+=3-keyboard_check_direct(vk_shift)
}
}
if image_speed=0 image_index+=0.15-keyboard_check_direct(vk_shift)*0.05
legdir=90 
if keyboard_check(ord('A')) legdir=135
if keyboard_check(ord('D')) legdir=45
legindex+=0.4-keyboard_check_direct(vk_shift)*0.15
scrMoveSolidOff()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if persistent=1 and objEffector.fade=1 exit
if instance_exists(objPhoneConversation) exit
if active=0 exit
scrMoveSolidOn()
if place_free(x,y+3) {y+=3-keyboard_check_direct(vk_shift)} else {
if place_free(x-6,y+3) x-=3-keyboard_check_direct(vk_shift) else {
if place_free(x+6,y+3) x+=3-keyboard_check_direct(vk_shift)
}
}
if image_speed=0 image_index+=0.15-keyboard_check_direct(vk_shift)*0.05
legdir=270 
if keyboard_check(ord('A')) legdir=225
if keyboard_check(ord('D')) legdir=315
legindex+=0.4-keyboard_check_direct(vk_shift)-keyboard_check_direct(vk_shift)*0.15
scrMoveSolidOff()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if persistent=1 and objEffector.fade=1 exit
if instance_exists(objPhoneConversation) exit
if active=0 exit
scrMoveSolidOn()
if place_free(x+3,y) {x+=3-keyboard_check_direct(vk_shift)} else {
if place_free(x+3,y-6) y-=3-keyboard_check_direct(vk_shift) else {
if place_free(x+3,y+6) y+=3-keyboard_check_direct(vk_shift)
}
}
if image_speed=0 image_index+=0.15-keyboard_check_direct(vk_shift)*0.05
legdir=0
if keyboard_check(ord('W')) legdir=45
if keyboard_check(ord('S')) legdir=315
legindex+=0.4-keyboard_check_direct(vk_shift)*0.15
scrMoveSolidOff()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if persistent=1 and objEffector.fade=1 exit
if instance_exists(objPhoneConversation) exit
if active=0 exit
scrMoveSolidOn()
if place_free(x-3,y) {x-=3-keyboard_check_direct(vk_shift)} else {
if place_free(x-3,y-6) y-=3-keyboard_check_direct(vk_shift) else {
if place_free(x-3,y+6) y+=3-keyboard_check_direct(vk_shift)
}
}
if image_speed=0 image_index+=0.15-keyboard_check_direct(vk_shift)*0.05
legdir=180 
if keyboard_check(ord('W')) legdir=135
if keyboard_check(ord('S')) legdir=225
legindex+=0.4-keyboard_check_direct(vk_shift)*0.15
scrMoveSolidOff()</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.xbox=1 exit
if instance_exists(objPhoneConversation) exit
if place_meeting(x+lengthdir_x(10,dir),y+lengthdir_y(10,dir),objSecretMask) or place_meeting(x,y,objSecretMask) {
with objSecretMask {
global.masks[image_index]=1
global.newmask[global.newmasks]=image_index
global.newmasks+=1
audio_play_sound(sndToken,0,false)
my_id=instance_create(x,y,objLetterFound)
my_id.text='"'+scrMaskGetName(image_index)+'"'
instance_destroy()
}
scrCheckMasks()
exit
}


if place_meeting(x+lengthdir_x(12,dir),y+lengthdir_y(12,dir),objAnsweringMachine) {
if objAnsweringMachine.active=1 {
scrGetMessage(objAnsweringMachine)
sprite_index=sprPTakePhone
image_index=0
audio_play_sound(sndPhone,0,false)
}
}

if place_meeting(x+lengthdir_x(12,dir),y+lengthdir_y(12,dir),objBox) {
if objBox.sprite_index=sprBox {
objBox.sprite_index=sprBoxOpen
objBox.image_index=1
audio_play_sound(sndBox,0,false)
} else {
with objBox {
audio_play_sound(sndPickupWeapon,0,false)
scrGetMessage(objOpenedBox)
my_id=instance_create(x,y,objOpenedBox)
my_id.image_angle=image_angle
instance_destroy()
global.package=1
global.done=1
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_mouse,ev_global_right_press)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrPlayerAnimationEnd</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if persistent=1 {
view_xview[0]=xview
view_yview[0]=yview
alarm[0]=36
}
else {
view_angle[0]=1
view_xview[0]=x-view_wview[0]/2
view_yview[0]=y-view_hview[0]/2
}
global.maskon=0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=sprPTakePhone {
if !instance_exists(objPhoneConversation) sprite_index=sprPWalkUnarmed else {
if image_index&lt;3 image_index+=0.15
}
}
if persistent=1 exit
if sprite_index=last_sprite nothing=1 else {
scrUpdateMaskPos(sprite_index)
last_sprite=sprite_index
}
draw_set_blend_mode(bm_add)
draw_circle_color(x,y,48+random(6)+light,make_color_hsv(0,0,30+light*2),c_black,0)
draw_set_blend_mode(bm_normal)
if myspeed=2.25 legsprite=sprLegsStairs else legsprite=sprLegs
if sprite_index=sprPWalkHospital legsprite=sprLegsHospital
if aimon=1 {
dir=point_direction(x,y,global.mousex,global.mousey)
if global.xbox=1 {
if active=1 dir=scrXboxPlayerLook() else {
if point_distance(x,y,previousx,previousy)&gt;0.1 dir=point_direction(previousx,previousy,x,y)
}
}

}
if sprite_index=sprPUnlockDoor dir=90
draw_sprite_ext(legsprite,legindex,x+1,y+1,image_xscale,image_yscale,legdir,c_black,0.5)
draw_sprite_ext(sprite_index,image_index,x+1,y+1,image_xscale,image_yscale*left,dir,c_black,0.5)
draw_sprite_ext(legsprite,legindex,x,y,image_xscale,image_yscale,legdir,image_blend,image_alpha)
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale*left,dir,image_blend,image_alpha)
if reload&gt;0 reload-=1
if light&gt;3 light-=3
if sprite_index=sprPWalkThrow {
left=1
draw_sprite_ext(sprThrowWeapons,throwindex,x+lengthdir_x(throwadd[floor(image_index)],dir-180)+lengthdir_x(8,dir-90)+1,y+1+lengthdir_y(throwadd[floor(image_index)],dir-180)+lengthdir_y(8,dir-90),image_xscale,image_yscale,dir+(image_index-3)*5,c_black,0.5)
draw_sprite_ext(sprThrowWeapons,throwindex,x+lengthdir_x(throwadd[floor(image_index)],dir-180)+lengthdir_x(8,dir-90),y+lengthdir_y(throwadd[floor(image_index)],dir-180)+lengthdir_y(8,dir-90),image_xscale,image_yscale,dir+lengthdir_x(20,360*(image_index*(1/8))),image_blend,image_alpha)
}
//scrDrawMask(set yscale and direction)
if maskon=1 scrDrawMask(0)
if sprite_index=sprPThrowMask {
if image_index&lt;3 scrDrawMask(0)
if image_index&gt;=3 and image_index&lt;4 draw_sprite_ext(sprMaskDropBack,global.maskindex,x+lengthdir_x(4,dir),y+lengthdir_y(4,dir),1,1,dir,image_blend,image_alpha)
if image_index&gt;=4 and image_index&lt;5 draw_sprite_ext(sprMaskDropBack,global.maskindex,x+lengthdir_x(6,dir),y+lengthdir_y(6,dir),1,1,dir,image_blend,image_alpha)
if image_index&gt;=5 and image_index&lt;16 draw_sprite_ext(sprMaskDropBack,global.maskindex,x+lengthdir_x(7,dir),y+lengthdir_y(7,dir),1,1,dir,image_blend,image_alpha)
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if instance_number(objEnemy)+instance_number(objKnockedOut)=0 {//vcapture_save() 
objEffector.fade=1 if room=room_last objEffector.restart=1 else objEffector.next=1}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
