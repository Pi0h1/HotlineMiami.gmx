<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoss2Walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>objPlayerBiker</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    scrInitXboxButtons();
image_speed = 0;
dir = 0;
movex = 0;
movey = 0;
move = 0;
viewspeed = 0;
myxspeed = 0;
myyspeed = 0;
myspeed = 0;
reload = 20;
light = 0;
legdir = 0;
legindex = 0;
left = 1;
ammo = 3;
energie = 1;
global.enemy = -1234;
if (!variable_local_exists("clear"))
    clear = 0;
aim = 0;
if (!place_free(x, y)) {
    x = global.executionx;
    y = global.executiony;
}
active = 1;
aimon = 1;
aimfar = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active = 0 {
    // do nothing.
} else {
    if (global.xbox)
        scrXboxBikerHouseMouse();

    if (!global.xbox)
        aimfar = keyboard_check_direct(vk_shift);
    else aimfar = checkbutton(0, getid(9));
    factor = 1;
    if (aimfar) {
        if (global.xbox) {
            viewx = objPlayer.x + rightthumb_x(0) * 0.0045;
            viewy = objPlayer.y - rightthumb_y(0) * 0.003;
        } else {
            viewx = objPlayer.x + ((display_mouse_get_x() - display_get_width() * 0.5) * (view_wview[0] / display_get_width())) * factor;
            viewy = objPlayer.y + ((display_mouse_get_y() - display_get_height() * 0.5) * (view_hview[0] / display_get_height())) * factor;
        }
        viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy) * 0.1;
        viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy);
        view_xview[0] += lengthdir_x(viewspeed, viewdir);
        view_yview[0] += lengthdir_y(viewspeed, viewdir);
        vdist = point_distance(x, y, room_width / 2, room_height / 2);
        vdir = point_direction(room_width / 2, room_height / 2, x, y);
        view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);
    } else {
        viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(24, dir), y + lengthdir_y(24, dir)) * 0.1;
        viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(24, dir), y + lengthdir_y(24, dir));

        view_xview[0] += lengthdir_x(viewspeed, viewdir);
        view_yview[0] += lengthdir_y(viewspeed, viewdir);

        vdist = point_distance(x, y, room_width / 2, room_height / 2);
        vdir = point_direction(room_width / 2, room_height / 2, x, y);
        view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);
    }

    xview = view_xview[0];
    yview = view_yview[0];
    if (persistent &amp;&amp; objEffector.fade) {
        if (place_free(x + addx, y))
            x += addx;
        if (place_free(x, y + addy))
            y += addy;
        if (image_speed == 0)
            image_index += 0.15;
        legindex += 0.4;
        exit;
    }

    scrPlayerMoveKeyboard();
}

if (sprite_index == sprMCWalkNoHelmet &amp;&amp; global.done) {
    if (room == rmMCSequence2Downstairs || room == rmMCSequence3Downstairs || room == rmMCSequence4Downstairs) {
        if (instance_exists(objMCBike)) {
            if (point_distance(x, y, objMCBike.x, objMCBike.y) &lt; 34) {
                active = 0;
                image_index = 0;
                legindex = 0;
                sprite_index = sprMCPutOnHelmet;
            }
        }
    }
}

if (sprite_index == sprMCPutOnHelmet) {
    if (image_index &lt; 3) {
        image_index += 0.1;
    } else {
        sprite_index = sprBoss2Walk;
        image_index = 0;
        active = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    exit;
    
if (place_meeting(x + lengthdir_x(10, dir), y + lengthdir_y(10, dir), objSecretMask)) {
    with (objSecretMask) {
        global.masks[image_index] = 1;
        global.newmask[global.newmasks] = image_index;
        global.newmasks += 1;
        audio_play_sound(sndToken, 0, false);
        my_id = instance_create(x, y, objLetterFound);
        my_id.text = '"' + scrMaskGetName(image_index) + '"';
        instance_destroy();
    }
    exit;
}

event_perform(ev_mouse, ev_global_left_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sprBoss2AttackCleaver) {
    sprite_index = sprBoss2WalkCleaver;
    image_speed = 0;
}
if (sprite_index == sprBoss2ThrowKnife) {
    sprite_index = sprBoss2WalkCleaver;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent) {
    if (move) {
        move = 0;
        x += movex;
        y += movey;
        xview += movex;
        yview += movey;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objEnemy)) {
    clear = 0;
} else clear = 1;
if (global.paused) {
    exit;
}
if (!instance_exists(objEffector))
    instance_create(x, y, objEffector);
if (!instance_exists(objBackgroundColor)) {
    if (room == rmJanitors) {
        with (objBackgroundColor)
            instance_destroy();
    } else instance_create(x, y, objBackgroundColor);
}
if (!instance_exists(objSurfacer))
    instance_create(x, y, objSurfacer);
if (persistent ) {
    view_xview[0] = xview;
    view_yview[0] = yview;
    with (objEffector) {
        vlastx = view_xview[0];
        vlasty = view_yview[0];
    }
    alarm[0] = 36;
} else {
    vdist = point_distance(x, y, room_width / 2, room_height / 2);
    vdir = point_direction(room_width / 2, room_height / 2, x, y);
    view_xview[0] = x + lengthdir_x(vdist * 0.2, vdir - 180) - view_wview[0] * 0.5;
    view_yview[0] = y + lengthdir_y(vdist * 0.2, vdir - 180) - view_hview[0] * 0.5;
    view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);
    with (objEffector) {
        vlastx = view_xview[0];
        vlasty = view_yview[0];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent)
    exit;
if (sprite_index == sprMCPickUpPhone) {
    if (!instance_exists(objPhoneConversation)) {
        sprite_index = sprMCWalkNoHelmet;
        active = 1;
    } else {
        if (image_index &lt; 3)
            image_index += 0.15;
    }
}
if (myspeed == 2.25) {
    legsprite = sprBikerLegsStairs;
} else legsprite = sprBikerLegs;
draw_set_blend_mode(bm_add);
draw_circle_color(x, y, 48 + random(6) + light, make_color_hsv(0, 0, 30 + light * 2), c_black, 0);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(legsprite, legindex, x + 1, y + 1, image_xscale, image_yscale, legdir, c_black, 0.5);
draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, image_yscale * left, dir, c_black, 0.5);
draw_sprite_ext(legsprite, legindex, x, y, image_xscale, image_yscale, legdir, image_blend, image_alpha);
if (aimon) {
    dir = point_direction(x, y, global.mousex, global.mousey);
    if (global.xbox)
        dir = scrXboxPlayerLook();
}
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale * left, dir, image_blend, image_alpha);
if (reload &gt; 0)
    reload--;
if (light &gt; 3)
    light -= 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aim = !aim;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_keypress, vk_control);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
