<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
sprite = sprGoArrow;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objPlayer))
    exit;
if (room == rmTrainstationEntrance) {
    if (objTrain.visible) {
        if (!place_meeting(x, y, objPlayer))
            solid = 1;
        visible = 0;
        exit;
    }
}
if (instance_exists(objEnemy) || instance_exists(objKnockedOut) || instance_exists(objBoss) || instance_exists(objEHideM16) || instance_exists(objESubwayStatic)) {
    if (!place_meeting(x, y, objPlayer))
        solid = 1;
    visible = 0;
} else {
    solid = 0;
    if (objPlayer.persistent) {
        if (!place_meeting(x, y, objPlayer)) {
            visible = 1;
            solid = 1;
        }
    } else visible = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (solid)
    exit;
if (other.object_index == objPlayerMouse || other.object_index == objPlayerMouseHouse || other.object_index == objPlayerBiker || other.object_index == objPlayerBikerHouse) {
    sprite = sprArrowGray;
    objPlayer.persistent = 1;
    objPlayer.addx = addx * 3;
    objPlayer.addy = addy * 3;
    objEffector.next = 1;
    objEffector.fade = 1;
    objEffector.nextroom = nextroom;
    with (objTransitioner) {
        if (nextroom == objEffector.nextroom)
            sprite = sprArrowGray;
    }
    with (objTeleporter) {
        if (nextroom == objEffector.nextroom)
            sprite = sprArrowGray;
    }
    visible = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayerMouseHouse) || instance_exists(objPlayerBikerHouse)) {
    if (room == rmSequence13) {
        if (!global.done)
            exit;
    } else exit;
}
dir += 8;
if (sprite == sprGoArrow) {
    index = 0;
    if (addx == 1)
        index = 0;
    if (addx == -1)
        index = 2;
    if (addy == 1)
        index = 3;
    if (addy == -1)
        index = 1;
    draw_sprite_ext(sprite, index, x + lengthdir_x(abs(addx) * 3, dir), y + lengthdir_y(abs(addy) * 3, dir), 1, 1, 0, c_white, 1);
    exit;
}
if (addx == -1) {
    draw_sprite_ext(sprite, dir * (1 / 16), x + lengthdir_x(4, dir), y, 1, 1, -90, c_white, 1);
}
if (addx == 1) {
    draw_sprite_ext(sprite, dir * (1 / 16), x + lengthdir_x(4, dir), y, 1, 1, 90, c_white, 1);
}
if (addy == 1) {
    draw_sprite_ext(sprite, dir * (1 / 16), x, y + lengthdir_x(4, dir), 1, 1, 0, c_white, 1);
}
if (addy == -1) {
    draw_sprite_ext(sprite, dir * (1 / 16), x, y + lengthdir_x(4, dir), 1, 1, 180, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
