<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPWalkHospital</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    scrInitXboxButtons();
image_speed = 0;
currentweapon = 0;
dir = 0;
viewspeed = 0;
reload = 0;
light = 0;
legdir = 0;
legindex = 0;
left = 1;
ammo = 0;
energie = 1;
throwreload = 0;
active = 1;
myxspeed = 0;
myyspeed = 0;
myspeed = 0;
last_sprite = sprPWalkHospital;
view_xview[0] = x - view_wview[0] / 2;
view_yview[0] = y - view_hview[0] / 2;
xview = view_xview[0];
yview = view_yview[0];
alarm[1] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.loaded = 1;
with (objEffector) {
    global.amount = amount;
    amount = 0;
}
game_save(working_directory + "\tempsave.sav");
with (objEffector) {
    amount = global.amount;
}
global.loaded = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.test = 0;
view_xview[0] = xview;
view_yview[0] = yview;
if (sprite_index == sprPKeyLockOpen) {
    if (image_index &lt; 4){
        image_index += 0.2;
    } else {
        active = 1;
        with (objLockedDoor)
            image_index = 1;
        sprite_index = sprPWalkHospital;
    }
    exit
}
with (objWeapon) {
    if (point_distance(x, y, objPlayer.x, objPlayer.y) &lt; 32)
        global.test = 2;
}
if (place_meeting(x, y, objKnockedOut))
    global.test = 1;
objEffector.action = global.test;
if (throwreload &gt; 0)
    throwreload--;
if (instance_exists(objPhoneConversation)) {
    valid = 0;
} else valid = 1;
factor = 1;
if (global.xbox == 0) {
    aimfar = keyboard_check_direct(vk_shift);
} else aimfar = checkbutton(0, getid(9));
if (aimfar &amp;&amp; valid) {
    if (global.xbox) {
        viewx = objPlayer.x + rightthumb_x(0) * 0.0045;
        viewy = objPlayer.y - rightthumb_y(0) * 0.003;
    } else {
        factor = 1.8;
        viewx = objPlayer.x + ((display_mouse_get_x() - display_get_width() * 0.5) * (view_wview[0] / display_get_width())) * factor;
        viewy = objPlayer.y + ((display_mouse_get_y() - display_get_height() * 0.5) * (view_hview[0] / display_get_height())) * factor;
    }
    viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy) * 0.1;
    viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy);
    view_xview[0] += lengthdir_x(viewspeed, viewdir);
    view_yview[0] += lengthdir_y(viewspeed, viewdir);
    vdist = point_distance(x, y, room_width / 2, room_height / 2);
    vdir = point_direction(room_width / 2, room_height / 2, x, y);
    view_angle[0] = lengthdir_y(objDizzy.dizziness * 20, lengthdir_x(objDizzy.dizziness * 30, global.dir * 3));
} else {
    if (objPlayer.active == 0 &amp;&amp; instance_exists(objPhoneConversation)) {
        with (global.doctor) {
            valid = 0;
            vdist = point_distance(x, y, room_width / 2 - (1 - valid) * 88, room_height / 2);
            vdir = point_direction(room_width / 2 - (1 - valid) * 88, room_height / 2, x, y);
            viewspeed = point_distance(view_xview[0] + view_wview[0] / 2 - (1 - valid) * 88, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180)) * 0.1;
            viewdir = point_direction(view_xview[0] + view_wview[0] / 2 - (1 - valid) * 88, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180));
            view_xview[0] += lengthdir_x(viewspeed, viewdir);
            view_yview[0] += lengthdir_y(viewspeed, viewdir);
            view_angle[0] = lengthdir_y(objDizzy.dizziness * 20, lengthdir_x(objDizzy.dizziness * 30, global.dir * 3));
        }
    } else {
        viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(24, dir), y + lengthdir_y(24, dir)) * 0.1;
        viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(24, dir), y + lengthdir_y(24, dir));
        view_xview[0] += lengthdir_x(viewspeed, viewdir);
        view_yview[0] += lengthdir_y(viewspeed, viewdir);
        view_angle[0] = lengthdir_y(objDizzy.dizziness * 20, lengthdir_x(objDizzy.dizziness * 30, global.dir * 3));
    }
}
if (sprite_index == sprPHospitalHeadache) {
    if (global.shake &lt; 6)
        global.shake += 0.25;
    with (objDizzy) {
        if (dizziness &gt; 0.1)
            dizziness -= 0.005;
    }
} else {
    if (global.shake &gt; 0)
        global.shake -= 0.5;
}
xview = view_xview[0];
yview = view_yview[0];
view_xview[0] = xview - global.shake + global.shake * 2;
view_yview[0] = yview - global.shake + global.shake * 2;

if (persistent &amp;&amp; objEffector.fade) {
    if (place_free(x + addx, y))
        x += addx;
    if (place_free(x, y + addy))
        y += addy;
    if (image_speed == 0)
        image_index += 0.15;
    legindex += 0.4;
    exit;
}

if (active) {
    scrPlayerHospitalMove();
    if (global.xbox)
        scrXboxPlayerHospitalMouse();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_mouse, ev_global_left_press);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objWindowV) {
    if (x == 32) {
        if (y == 352) {
            if (sprite_index == sprWindowSill) {
                // do nothing.
            } else {
                if (place_meeting(x + 16, y, objPlayer)) {
                    with (objPlayer)
                        instance_destroy();
                    instance_create(x + 16, y + 16, objPlayerOpenWindow);
                    sprite_index = sprWindowSill;
                    image_index = 0;
                    instance_create(x, y, objWindowOpen);
                }
            }
        }
    }
}

if (place_meeting(x, y, objToken)) {
    with (objToken) {
        instance_destroy();
        audio_play_sound(sndToken, 0, false);
        my_id = instance_create(x, y, objLetterFound);
        my_id.text = '"' + scrGetTokenLetter(letter) + '"';
        global.letter[letter] = 1;
    }
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sprPHospitalHeadache) {
    sprite_index = sprPWalkHospital;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent) {
    view_xview[0] = xview;
    view_yview[0] = yview;
    alarm[0] = 36;
} else {
    view_angle[0] = 1;
    view_xview[0] = x - view_wview[0] / 2;
    view_yview[0] = y - view_hview[0] / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objWindowV) {
    if (x == 32) &amp;&amp; (y == 352) {
        draw_sprite_ext(sprArrow, 0, x + 12 + lengthdir_x(3, global.dir * 8), y + 16, 1, 1, 270, c_white, 1);
    }
}

if (!global.locked) {
    with (objLockedDoor) {
        if (solid) {
            draw_sprite_ext(sprArrow, 0, x - 12 + lengthdir_x(3, global.dir * 8), y + 16, 1, 1, 90, c_white, 1);
        }
    }
}
draw_set_blend_mode(bm_add);
draw_circle_color(x, y, 48 + random(6) + light, make_color_hsv(0, 0, 30 + light * 2), c_black, 0);
draw_set_blend_mode(bm_normal);
legsprite = sprLegsLimp;
draw_sprite_ext(legsprite, legindex, x + 1, y + 1, image_xscale, image_yscale, legdir, c_black, 0.5);
draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, image_yscale * left, dir, c_black, 0.5);
draw_sprite_ext(legsprite, legindex, x, y, image_xscale, image_yscale, legdir, image_blend, image_alpha);
if (sprite_index == sprPWalkHospital) {
    dir = point_direction(x, y, global.mousex, global.mousey);
    if (global.xbox)
        dir = scrXboxPlayerLook();
}
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale * left, dir, image_blend, image_alpha);
if (reload &gt; 0)
    reload--;
if (light &gt; 3)
    light -= 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
