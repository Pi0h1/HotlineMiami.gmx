<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEBackBlunt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>98</depth>
  <persistent>0</persistent>
  <parentName>Effects</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
dogIndex=0;
isPlayer=false
if isPlayer=true{
    image_speed=0
    friction=0.1
    image_yscale=-1+round(random(1))*2
    bled=0
    SteamIncStat("Deaths",1)
    dir=0
}else{
    image_speed=0
    friction=0.1
    //image_yscale=-1+round(random(1))*2
    bled=0
    wait=500
    life=100+random(60)
    SteamIncStat("Kills",1)
    done=0
    donetimer=60*10
    dir=0
}
global.depthDeath+=1
depth=depth-global.depthDeath
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If isPlayer
if isPlayer = true {
  scrMoveSolidOn()
  if !place_free(x, y) speed = 0
  scrMoveSolidOff()
  if speed = 0 and bled = 0 {
    bled = 1
    length = random(24)
    if sprite_index = sprEBackBlunt repeat(1 + random(2)) instance_create(x + lengthdir_x(24, image_angle) - 2 + random(4), y + lengthdir_y(24, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprEBackCut repeat(1 + random(2)) instance_create(x + lengthdir_x(6, image_angle) - 2 + random(4), y + lengthdir_y(6, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprPBackShotgun or sprite_index = sprPBackCar repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprPBackMachinegun repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)

    if sprite_index = sprPBackEaten {
      repeat(2 + random(3)) {
        dir = image_angle + image_yscale * 12
        my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
        my_id.image_angle = random(360)
      }
    }

    if sprite_index = sprEBackBlunt {
      if image_index = 6 or image_angle = 13 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - 35 + random(70)
        }
      }

      if image_index = 14 {
        repeat(2 + random(3)) {
          dir = image_angle + (2 + random(4)) * image_yscale
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - random(50)
        }
      }

      if image_index = 12 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - 70 + random(140)
        }
      }
    }

    if sprite_index = sprPBackShotgun {
      if image_index = 2 {
        repeat(2 + random(3)) {
          dir = image_angle + image_yscale * 12
          my_id = instance_create(x + lengthdir_x(15, dir), y + lengthdir_y(15, dir), objBloodSquirt)
          my_id.image_angle = image_angle + 90 * image_yscale - 20 + random(60)
        }
      }

      if image_index = 3 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }
    }

    if sprite_index = sprEBackCut {
      if image_index = 2 {
        repeat(2 + random(3)) {
          dir = image_angle + image_yscale * 12
          my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
          my_id.image_angle = random(360)
        }
      }
    }

  }

  if room = rmSequence12c nothing = 1
  else {
    vdist = point_distance(x, y, room_width / 2, room_height / 2)
    vdir = point_direction(room_width / 2, room_height / 2, x, y)
    viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180)) * 0.1
    viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180))
    view_xview[0] += lengthdir_x(viewspeed, viewdir)
    view_yview[0] += lengthdir_y(viewspeed, viewdir)
    view_angle[0] = lengthdir_y(vdist * (1 / 100), vdir * 2)
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///else
if isPlayer=false{

  scrMoveSolidOn()
  if !place_free(x, y) speed = 0
  scrMoveSolidOff()
  if sprite_index = sprEBackThroat {
    if bled = 0 {
      instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodPool)
      bled = 1
    } else {
      if round(random(25)) = 2 and life &gt; 0 {
        dir = image_angle + image_yscale * 12
        my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
        my_id.image_angle = random(360)
      }
      if life &gt; 0 life -= 1
      else {
        image_speed = 0
        if !place_meeting(x, y, objBloodPool) {
          done = 1
        }
      }
    }
    exit
  }

  if sprite_index = sprEBackScissor {
    image_speed = 0
    if life &gt; 0 {
      life -= 1
      if image_index &lt; 7.3 image_index += 0.15
      else image_index = 0
    } else {
      if image_index &lt; 13 image_index += 0.15
      else {
        if !place_meeting(x, y, objBloodPool) done = 1
      }
    }
    exit
  }

  if sprite_index = sprEBackHeadJerk {
    image_speed = 0
    if life &gt; 0 {
      life -= 2
    } else {
      if image_index &lt; 6 image_index += 0.15
      else {
        if !place_meeting(x, y, objBloodPool) done = 1
      }
      if round(random(12)) = 2 {
        my_id = instance_create(x + lengthdir_x(21, image_angle), y + lengthdir_y(21, image_angle), objBloodSquirt)
        my_id.image_angle = image_angle - 30 + random(60)
      }
    }
    exit
  }

  if sprite_index = sprEBackCracked {
    image_speed = 0
    if life &gt; 0 {
      life -= 1
      if image_index &lt; 3.3 image_index += 0.15
      else image_index = 0
      if round(random(30)) = 2 {
        my_id = instance_create(x + lengthdir_x(22, image_angle), y + lengthdir_y(22, image_angle), objBloodSquirt)
        my_id.image_angle = image_angle - 20 + random(40)
      }
    } else {
      if image_index &lt; 9 image_index += 0.15
      else {
        if !place_meeting(x, y, objBloodPool) done = 1
      }
    }
    exit
  }

  if sprite_index = sprEBackShotgunVomit {
    image_speed = 0
    if image_index &lt; 26 image_index += 0.15
    else {
      if !place_meeting(x, y, objBloodPool) done = 1
    }
    if bled = 0 and image_index &gt;= 19 {
      dir = image_angle - image_yscale
      instance_create(x + lengthdir_x(7, dir), y + lengthdir_y(7, dir), objBloodPool)
      bled = 1
      repeat(5) {
        my_id = instance_create(x + lengthdir_x(7, dir - 15), y + lengthdir_y(7, dir - 15), objBloodSquirt)
        my_id.image_angle = image_angle + 90 * image_yscale - 40 + random(80)
      }
    }
    exit
  }

  if sprite_index = sprEBackHeadshot {
    image_speed = 0
    if image_index &lt; 19 image_index += 0.2
    else {
      if !place_meeting(x, y, objBloodPool) done = 1
    }
    if bled = 0 and image_index &gt;= 13 {
      dir = image_angle
      instance_create(x + lengthdir_x(40, dir), y + lengthdir_y(40, dir), objBloodPool)
      bled = 1
      repeat(5) {
        my_id = instance_create(x + lengthdir_x(45, dir), y + lengthdir_y(45, dir), objBloodSquirt)
        my_id.image_angle = image_angle - 40 + random(80)
      }
    }
    exit
  }

  if sprite_index = sprEDeadDart {
    image_speed = 0
    if life &gt; 0 {
      life -= 1
      if image_index &lt; 7.3 image_index += 0.15
      else image_index = 0
    } else {
      if image_index &lt; 13 image_index += 0.15
      else {
        if !place_meeting(x, y, objBloodPool) done = 1
      }
    }
    exit
  }

  if sprite_index = sprEDeadBoiling {
    image_speed = 0
    if life &gt; 0 {
      life -= 1
      if life &gt; 60 and round(random(3)) = 2 instance_create(x + lengthdir_x(21, image_angle), y + lengthdir_y(21, image_angle), objSteam)
      if image_index &lt; 7.3 image_index += 0.15
      else image_index = 0
    } else {
      if image_index &lt; 13 image_index += 0.15 //else {if surface_exists(global.surf2) and !place_meeting(x,y,objBloodPool) addToSurface(global.surf2,1)}
    }
    exit
  }

  if speed = 0 and bled = 0 {
    bled = 1
    length = random(24)
    if sprite_index = sprEBackBlunt or sprite_index = sprEFrontBlunt or sprite_index = sprPoliceBackBlunt or sprite_index = sprPoliceFrontBlunt repeat(1 + random(2)) instance_create(x + lengthdir_x(24, image_angle) - 2 + random(4), y + lengthdir_y(24, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprEBackCut repeat(1 + random(2)) instance_create(x + lengthdir_x(6, image_angle) - 2 + random(4), y + lengthdir_y(6, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprEBackShotgun or sprite_index = sprPoliceBackShotgun or sprite_index = sprEFrontShotgun or sprite_index = sprPoliceFrontShotgun repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprEBackMachinegun or sprite_index = sprWaiterDeadShotgun or sprite_index = sprWaiterDeadMachinegun or sprite_index = sprPoliceBackMachinegun or sprite_index = sprEFrontMachinegun or sprite_index = sprPoliceFrontMachinegun repeat(2 + random(2)) instance_create(x + lengthdir_x(length, image_angle) - 2 + random(4), y + lengthdir_y(length, image_angle) - 2 + random(4), objBloodPool)
    if sprite_index = sprDogDeadCut or sprite_index = sprDogDeadShot or sprite_index = sprDogDeadBlunt repeat(1 + random(2)) instance_create(x + lengthdir_x(2, image_angle) - 2 + random(4), y + lengthdir_y(2, image_angle), objBloodPool)

    if sprite_index = sprEMafiaDieLean {
      repeat(2 + random(3)) {
        dir = image_angle
        my_id = instance_create(x, y, objBloodSquirt)
        my_id.image_angle = random(360)
      }
    }

    if sprite_index = sprEBackBashed {
      repeat(2 + random(3)) {
        dir = image_angle - 2 + random(4)
        my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
        my_id.image_angle = dir - 100 + random(200)
      }
    }

    if sprite_index = sprEBackSlashed {
      if image_index = 0 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(20, dir), y + lengthdir_y(20, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }

      if image_index = 1 {
        repeat(2 + random(3)) {
          dir = image_angle - 26 + random(52)
          my_id = instance_create(x + lengthdir_x(6, dir), y + lengthdir_y(6, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }

      if image_index = 1 {
        repeat(2 + random(3)) {
          dir = image_angle - 16 + random(32)
          my_id = instance_create(x + lengthdir_x(16, dir), y + lengthdir_y(16, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }

    }

    if sprite_index = sprEBackBlunt {
      if image_index = 6 or image_angle = 13 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - 35 + random(70)
        }
      }

      if image_index = 14 {
        repeat(2 + random(3)) {
          dir = image_angle + (2 + random(4)) * image_yscale
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - random(50)
        }
      }

      if image_index = 12 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(24, dir), y + lengthdir_y(24, dir), objBloodSquirt)
          my_id.image_angle = dir - 70 + random(140)
        }
      }
    }

    if sprite_index = sprDogDeadShot {
      if image_index = 3 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(8, dir), y + lengthdir_y(8, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }
    }

    if sprite_index = sprEBackShotgun {
      if image_index = 2 {
        repeat(2 + random(3)) {
          dir = image_angle + image_yscale * 12
          my_id = instance_create(x + lengthdir_x(15, dir), y + lengthdir_y(15, dir), objBloodSquirt)
          my_id.image_angle = image_angle + 90 * image_yscale - 20 + random(60)
        }
      }

      if image_index = 3 {
        repeat(2 + random(3)) {
          dir = image_angle - 2 + random(4)
          my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
          my_id.image_angle = dir - 30 + random(60)
        }
      }
    }

    if sprite_index = sprEBackCut {
      if image_index = 2 {
        repeat(2 + random(3)) {
          dir = image_angle + image_yscale * 12
          my_id = instance_create(x + lengthdir_x(19, dir), y + lengthdir_y(19, dir), objBloodSquirt)
          my_id.image_angle = random(360)
        }
      }
    }

  }
  if wait &gt; 0 wait -= 1
  else {
    if bled = 1 {
      if !place_meeting(x, y, objBloodPool) {
        done = 1
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=sprPBackElectrified {
if round(random(20))=2 image_speed=0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isPlayer {
draw_sprite_ext(sprite_index,image_index,x+1,y+1,image_xscale,image_yscale,image_angle,c_black,0.5)
}

draw_self();

if sprite_index=sprPBackEaten {
draw_sprite_ext(sprDogEat,dogIndex,x+1,y+1,1,1,image_angle,c_black,0.5)
draw_sprite_ext(sprDogEat,dogIndex,x,y,1,1,image_angle,c_white,1)
dogIndex+=0.2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
