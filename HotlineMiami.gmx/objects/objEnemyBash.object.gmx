<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPAttackBash</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    scrInitXboxButtons();
energie = 1 + floor(random(4));
if (global.maskindex == 2)
    energie = 0;
image_index = 3;
image_speed = 0;
ammo = 0;
scrInitMaskPos();
scrUpdateMaskPos(sprite_index);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    scrXboxBashKill();

vdist = point_distance(x, y, room_width / 2, room_height / 2);
vdir = point_direction(room_width / 2, room_height / 2, x, y);
viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180)) * 0.1;
viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180));
view_xview[0] += lengthdir_x(viewspeed, viewdir);
view_yview[0] += lengthdir_y(viewspeed, viewdir);
view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);

if (image_index &lt; 3)
    image_index += 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    exit;

if (image_index == 3) {
    audio_play_sound(sndWeaponHit, 0, false);
    global.shake = 3;
    if (energie &gt; 0) {
        energie--;
        image_index = 0;
    } else {
        audio_play_sound(sndHit, 0, false);
        audio_play_sound(sndPunch, 0, false);
        global.shake = 5;
        my_id = instance_create(x, y - 12, objScore);
        my_id.text = "+" + string((200) + 400 * (global.factor)) + "pts";
        global.myscore += (200) + 400 * (global.factor);
        global.killscore += 200;
        global.boldscore += 400 * global.factor;
        global.combotime = 240;
        global.combo++;
        global.killx[global.kills] = x;
        global.killy[global.kills] = y;
        global.kills++;
        myx = x + lengthdir_x(20, image_angle);
        myy = y + lengthdir_y(24, image_angle);
        my_id = instance_create(myx, myy, objBloodPool);
        my_id = instance_create(x, y, objDeadBody);
        if (sprite_index == sprPAttackBash)
            my_id.sprite_index = sprEBackBashed;
        if (sprite_index == sprPAttackBashPolice)
            my_id.sprite_index = sprPoliceBackBashed;
        my_id.image_index = floor(random(4));
        my_id.image_angle = image_angle;
        my_id = instance_create(x, y, objPlayerMouse);
        my_id.reload = 30;
        global.dir = image_angle - 180;
        with (my_id)
            move_outside_solid(global.dir, 16);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add);
draw_circle_color(x, y, 48 + random(6), make_color_hsv(0, 0, 30), c_black, 0);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, image_yscale, image_angle, c_black, 0.5);
dir = point_direction(x, y, mouse_x, mouse_y);
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
if (maskon)
    scrDrawMask(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
