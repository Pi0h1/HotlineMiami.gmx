<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEM16Crouching</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
shake = 0;
image_index = 5;
energie = 0;
ammo = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objPlayer))
    alert = 1;
else alert = scrLook(objPlayer.x, objPlayer.y, 4);

if (alert == 0 || alert == 2) {
    direction = scrRotate(direction, point_direction(x, y, objPlayer.x, objPlayer.y), 10);
    if (image_index &gt; 0) {
        direction = dir;
        image_index -= 0.25;
    }
} else {
    reload = 20;
    if (image_index &lt; 5)
        image_index += 0.25;
    direction = dir;
}


if image_index = 0 {
    if (reload &gt; 0) {
        reload -= 1;
        exit;
    }
    shake = 1;
    reload = 2;
    my_id = instance_create(x + lengthdir_x(24, direction), y + lengthdir_y(24, direction), objEBullet);
    my_id.direction = direction - 4 + random(8);
    my_id.speed = 16;
    my_id.image_angle = my_id.direction;
    audio_play_sound(sndEM16, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index &gt; 4)
    exit;
    
if (global.maskindex == 15)
    energie = 0
if (object_get_parent(object_index) = objEnemyIdle)
    energie = 0;
global.my_id = id
if (other.passed) {
    if (!other.swat) {
        ds_list_add(global.bonuslist, "Sneaky Shot");
        if (global.bonustime &lt; 12)
            global.bonustime = 12;
    }
    if (object_get_parent(object_index) == objEnemyIdle) {
        instance_destroy();
        my_id = instance_create(x, y, objEnemy);
        my_id.alert = 2;
        exit;
    }
    global.my_x = other.dirx;
    global.my_y = other.diry;
    with (objEnemy) {
        if (!scrCollisionLineExt(x, y, global.my_id.x, global.my_id.y, 4, objSolid, objDoorV, objWallSoftH)) {
            alert = 2;
            if (sprite_index == sprEWalkUnarmed)
                alert = 0;
            if (sprite_index == sprEWalkShotgun || sprite_index == sprEWalkSilencer || sprite_index == sprEWalkDoubleBarrel || sprite_index == sprEWalkSilencer)
                checkreload = 50;
            else checkreload = 5;
            reload = 10;
            chasex = global.my_x;
            chasey = global.my_y;
        }
    }
}
image_xscale = 1.5;
image_yscale = 1.5;
bullets = 0;
energie -= 1 + other.caliber;
with (objBullet) {
    if (place_meeting(x, y, global.my_id)) {
        my_id = instance_create(x, y, objBloodSmoke);
        my_id.direction = direction - 170 + random(10);
        my_id.speed = 1;
        my_id.image_angle = my_id.direction;
        my_id.image_xscale = 0.8 + random(0.2);
        my_id.image_yscale = my_id.image_xscale;
        if (!caliber)
            instance_destroy();
        global.my_id.bullets++;
    }
}
image_xscale = 1;
image_yscale = 1;
edir = other.direction;
if (point_distance(other.x, other.y, other.startx, other.starty) &gt; 150) {
    if (!other.swat) {
        ds_list_add(global.bonuslist, "Sharp Shooter");
        if (global.bonustime &lt; 12)
            global.bonustime = 12;
    }
}
test = 0;
repeat(2 * bullets) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.sprite_index = sprBloodSplatSmall;
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(4);
}
repeat(1 + random(bullets)) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.direction = my_id.image_angle;
    my_id.speed = 1 + random(5);
}
repeat(bullets) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(16, edir), y - 3 + random(6) + lengthdir_y(16, edir), objBloodSmoke);
    my_id.image_xscale = 1.2 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = edir - 20 + random(40);
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(1);
    my_id.friction = 0.15;
}


if (bullets &gt; 1 || round(random(1)) || energie &lt; 0) {
    if (sprite_index == sprEWalkUnarmed || sprite_index == sprEGiveUp)
        noweapon = 1;
    else noweapon = 0;
    scrIdleGetEnemy();
    if (!other.swat)
        global.punchonly = 0;
    if (noweapon)
        factor = 0.5;
    else factor = 1;
    if (!other.swat) {
        my_id = instance_create(x, y - 12, objScore);
        my_id.text = "+" + string(((100) + 80 * factor) * global.factor) + "pts";
        global.myscore += ((100) + 80 * factor) * global.factor;
        global.killscore += (100);
        global.boldscore += 80 * factor;
        global.combo++;
        global.combotime = 240;
        global.killx[global.kills] = x;
        global.killy[global.kills] = y;
        global.kills++;
        global.gunkill++;
        if (global.bonustime &lt; 12 + global.factor * 4)
            global.bonustime = 12 + global.factor * 4;
        if (global.factor == 2)
            ds_list_add(global.bonuslist, "Exposure");
        if (global.factor == 3)
            ds_list_add(global.bonuslist, "Double Exposure");
        if (global.factor == 4)
            ds_list_add(global.bonuslist, "Triple Exposure");
        if (global.factor &gt; 4)
            ds_list_add(global.bonuslist, "Severe Exposure");
    }

    my_id = instance_create(x, y, objDeadBody);
    if (bullets &gt; 1)
        my_id.sprite_index = choose(sprEBackShotgun, sprEBackShotgun, sprEFrontShotgun);
    else my_id.sprite_index = choose(sprEBackMachinegun, sprEBackMachinegun, sprEFrontMachinegun);
    my_id.image_index = floor(random(4));
    if (my_id.sprite_index = sprEBackShotgun &amp;&amp; round(random(24)) == 2) {
        my_id.sprite_index = sprEBackShotgunVomit;
        my_id.image_index = 0;
    }
    if (my_id.sprite_index == sprEBackShotgun &amp;&amp; round(random(24)) == 2) {
        my_id.sprite_index = sprEBackHeadJerk;
        my_id.image_index = 0;
    }
    my_id.direction = edir;
    my_id.speed = 1.5 + random(1) + bullets * 0.15;
    my_id.image_angle = my_id.direction;
    if (my_id.sprite_index == sprEBackMachinegun &amp;&amp; round(random(24)) == 2) {
        my_id.sprite_index = sprEBackHeadshot;
        my_id.image_index = 0;
        my_id.speed = 0;
        my_id.image_angle -= 180;

        repeat(8) {
            my_id = instance_create(x - 3 + random(6), y - 3, objBloodSmoke);
            my_id.image_xscale = 1.2 - random(0.2);
            my_id.image_yscale = my_id.image_xscale;
            my_id.image_angle = edir - 20 + random(40);
            my_id.direction = my_id.image_angle;
            my_id.speed = 2 + random(1);
            my_id.friction = 0.15;

            my_id = instance_create(x - 3 + random(6), y - 3 + random(6), objBloodDrop);
            my_id.image_xscale = 1 - random(0.2);
            my_id.image_yscale = my_id.image_xscale;
            my_id.image_angle = point_direction(x, y, my_id.x, my_id.y);
            my_id.direction = my_id.image_angle;
            my_id.speed = 1 + random(5);
        }
        scrGoreShot(x, y, other.direction - 180, other.x, other.y, 1);
    } else {
        if (my_id.sprite_index == sprEBackMachinegun || my_id.sprite_index == sprEFrontMachinegun)
            scrGoreShot(x, y, other.direction - 180, other.x, other.y, 0);
    }
    if (my_id.sprite_index == sprEBackShotgun) {
        if (my_id.image_index == 0)
            scrGoreShotgun(x, y, other.direction - 180, 0, 0, 0, 0, 0, 1);
        if (my_id.image_index == 1)
            scrGoreShotgun(x, y, other.direction - 180, 0, 0, 0, 0, 0, 1);
        if (my_id.image_index == 2)
            scrGoreShotgun(x, y, other.direction - 180, 1, 
                x + lengthdir_x(18, my_id.direction + 20 * my_id.image_yscale), y + lengthdir_y(18, my_id.direction + 20 * my_id.image_yscale), my_id.direction - 90 * my_id.image_yscale, 0, 0);
        if (my_id.image_index == 3)
            scrGoreShotgun(x, y, other.direction - 180, 1, x + lengthdir_x(23, my_id.direction), y + lengthdir_y(23, my_id.direction), my_id.direction, 1, 0);
    }
    if (my_id.sprite_index == sprEFrontShotgun) {
        if (my_id.image_index == 0)
            scrGoreShotgun(x, y, other.direction - 180, 0, 0, 0, 0, 0, 0);
        if (my_id.image_index == 1)
            scrGoreShotgun(x, y, other.direction - 180, 0, 0, 0, 0, 0, 1);
        if (my_id.image_index == 2)
            scrGoreShotgun(x, y, other.direction - 180, 0, 0, 0, 0, 0, 0);
        if (my_id.image_index == 3)
            scrGoreShotgun(x, y, other.direction - 180, 1, x + lengthdir_x(23, my_id.direction), y + lengthdir_y(23, my_id.direction), my_id.direction, 1, 0);
    }


    if (!noweapon) {
        my_id = instance_create(x, y, objWeaponThrow);
        my_id.image_index = scrCurrentWeaponExt(sprite_index);
        my_id.direction = other.direction - 70 + random(40);
        my_id.speed = 2 + random(2);
        my_id.ammo = ammo;
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>majs = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0) {
    draw_sprite_ext(sprEM16CourchingLegs, image_index, x, y, image_xscale, image_yscale, direction, c_black, 0.5);
    draw_sprite_ext(sprEM16CourchingLegs, image_index, x, y, image_xscale, image_yscale, direction, image_blend, image_alpha);
    draw_sprite_ext(sprEWalkM16, image_index, x - shake + random(shake * 0.5), y - shake + random(shake * 0.5), image_xscale, image_yscale, direction, c_black, 0.5);
    draw_sprite_ext(sprEWalkM16, image_index, x - shake + random(shake * 0.5), y - shake + random(shake * 0.5), image_xscale, image_yscale, direction, image_blend, image_alpha);
} else {
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, direction, c_black, 0.5);
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, direction, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
