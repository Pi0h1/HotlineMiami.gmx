<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHumanShield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>sprMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
currentweapon = 0;
dir = 0;
if (global.xbox)
    scrInitXboxButtons();
myxspeed = 0;
myyspeed = 0;
move = 0;
movex = 0;
movey = 0;

viewspeed = 0;
bullets = 0;
reload = 0;
light = 0;
legdir = 0;
legindex = 0;
legindex2 = 0;
left = 1;
ammo = 0;
energie = 10;
throwreload = 0;
scrInitThrowPos();
scrInitMaskPos();
scrUpdateMaskPos(sprite_index);
last_sprite = sprite_index;
throwindex = 0;
maskindex = global.maskindex;
maskon = global.maskon;
masksprite = -1;
reset = mouse_check_button(mb_right);
shotgunned = 0;
aim = 0;
SteamSetAchievement("ACH_NIGEL_LOWRIE");
snap = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_id = instance_create(x, y, objDeadBody);
global.dir = dir;
with (my_id)
    move_contact_solid(global.dir - 45, 12);
if (shotgunned) {
    my_id.sprite_index = choose(sprEBackShotgun, sprEBackShotgun, sprEFrontShotgun);
    my_id.image_index = floor(random(2));
} else {
    my_id.sprite_index = choose(sprEBackMachinegun, sprEBackMachinegun, sprEFrontMachinegun);
    my_id.image_index = floor(random(3));
}
my_id.direction = dir - 180;
my_id.speed = random(1) + bullets * 0.15;
my_id.image_angle = my_id.direction;
instance_destroy();
my_id = instance_create(x, y, objPlayerMouse);
my_id.ammo = ammo;
switch (sprite_index) {
    case sprPHumanShieldDoubleBarrel: my_id.sprite = sprPWalkDoubleBarrel; break;
    case sprPHumanShieldMagnum: my_id.sprite = sprPWalkMagnum; break;
    case sprPHumanShieldScorpion: my_id.sprite = sprPWalkScorpion; break;
    case sprPHumanShieldUzi: my_id.sprite = sprPWalkUzi; break;
    case sprPHumanShieldMP5: my_id.sprite = sprPWalkMP5; break;
    case sprPHumanShieldSilencer: my_id.sprite = sprPWalkSilencer; break;
    default: my_id.sprite = sprPWalkUnarmed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>persistent = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox) {
    scrXboxPlayerShieldMove();
    scrXboxPlayerShieldMouse();
} else {
    if (!mouse_check_button(mb_right))
        reset = 0;
}
if (sprite_index == sprShieldSnapUzi || sprite_index == sprShieldSnapMP5 || sprite_index == sprShieldSnapDoubleBarrel || sprite_index == sprShieldSnapSilencer || sprite_index == sprShieldSnapScorpion || sprite_index == sprShieldSnapMagnum) {
    if (image_index &gt;= 3 &amp;&amp; snap == 0) {
        snap = 1;
        audio_play_sound(sndNeck, 0, false);
    }
}
global.test = 0;
objEffector.action = global.test;

if (keyboard_check(ord(global.upkey)))
    event_perform(ev_keyboard, ord('W'));
if (keyboard_check(ord(global.downkey)))
    event_perform(ev_keyboard, ord('S'));
if (keyboard_check(ord(global.leftkey)))
    event_perform(ev_keyboard, ord('A'));
if (keyboard_check(ord(global.rightkey)))
    event_perform(ev_keyboard, ord('D'));

if (global.xbox)
    aim = checkbutton(0, getid(9));
else aim = keyboard_check(vk_shift);
if (aim) {
    if (global.xbox) {
        viewx = objPlayer.x + rightthumb_x(0) * 0.0045;
        viewy = objPlayer.y - rightthumb_y(0) * 0.003;
    } else {
        viewx = objPlayer.x + ((display_mouse_get_x() - display_get_width() * 0.5) * (view_wview[0] / display_get_width()));
        viewy = objPlayer.y + ((display_mouse_get_y() - display_get_height() * 0.5) * (view_hview[0] / display_get_height()));
    }
    viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy) * 0.1;
    viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, viewx, viewy);
    view_xview[0] += lengthdir_x(viewspeed, viewdir);
    view_yview[0] += lengthdir_y(viewspeed, viewdir);
    vdist = point_distance(x, y, room_width / 2, room_height / 2);
    vdir = point_direction(room_width / 2, room_height / 2, x, y);
    view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);
} else {
    vdist = point_distance(x, y, room_width / 2, room_height / 2);
    vdir = point_direction(room_width / 2, room_height / 2, x, y);
    viewspeed = point_distance(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180)) * 0.1;
    viewdir = point_direction(view_xview[0] + view_wview[0] / 2, view_yview[0] + view_hview[0] / 2, x + lengthdir_x(vdist * 0.2, vdir - 180), y + lengthdir_y(vdist * 0.2, vdir - 180));
    view_xview[0] += lengthdir_x(viewspeed, viewdir);
    view_yview[0] += lengthdir_y(viewspeed, viewdir);
    view_angle[0] = lengthdir_y(vdist * (1 / 160), vdir * 2);
}

xview = view_xview[0];
yview = view_yview[0];
if (persistent &amp;&amp; objEffector.fade) {
    if (place_free(x + addx, y))
        x += addx;
    if (place_free(x, y + addy))
        y += addy;
    if (image_speed == 0)
        image_index += 0.15;
    legindex += 0.4;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) {
    if (place_meeting(x, y, objSolid)) {
        move_outside_solid(direction - 180, speed * 2);
        if (!place_meeting(x, y, objPlayer))
            exit;
    }
}
global.my_id = id;
image_xscale = 1.5;
image_yscale = 1.5;
energie--;
if (energie == 0) {
    alarm[1] = 5;
}
bullets = 0;

with (objEBullet) {
    if (place_meeting(x, y, global.my_id)) {
        my_id = instance_create(x, y, objBloodSmoke);
        my_id.direction = direction - 170 + random(10);
        my_id.speed = 1;
        my_id.image_angle = my_id.direction;
        my_id.image_xscale = 0.8 + random(0.2);
        my_id.image_yscale = my_id.image_xscale;
        instance_destroy();
        global.my_id.bullets++;
    }
}
if (shotgunned)
    exit;
if (bullets &gt; 4) {
    shotgunned = 1;
    alarm[1] = 1;
}

if (!scrCheckHitBack(dir, other.direction)) {
    image_xscale = 1;
    image_yscale = 1;
    exit;
    /*
    my_id = instance_create(x, y, objDeadBody);
    global.dir = dir;
    with my_id move_contact_solid(global.dir - 45, 12)
    if bullets &gt; 1 my_id.sprite_index = choose(sprEBackShotgun, sprEBackShotgun, sprEFrontShotgun)
    else my_id.sprite_index = choose(sprEBackMachinegun, sprEBackMachinegun, sprEFrontMachinegun)
    my_id.direction = other.direction
    my_id.speed = 1.5 + random(1) + bullets * 0.15
    my_id.image_angle = my_id.direction
    instance_destroy()
    my_id = instance_create(x, y, objPlayerMouse)
    my_id.ammo = ammo
    if sprite_index = sprPHumanShieldDoubleBarrel my_id.sprite = sprPWalkDoubleBarrel
    if sprite_index = sprPHumanShieldMagnum my_id.sprite = sprPWalkMagnum
    if sprite_index = sprPHumanShieldScorpion my_id.sprite = sprPWalkScorpion
    if sprite_index = sprPHumanShieldUzi my_id.sprite = sprPWalkUzi
    if sprite_index = sprPHumanShieldMP5 my_id.sprite = sprPWalkMP5
    if sprite_index = sprPHumanShieldSilencer my_id.sprite = sprPWalkSilencer
    */
}

image_xscale = 1;
image_yscale = 1;
edir = other.direction;
test = 0;
repeat(2 * bullets) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.sprite_index = sprBloodSplatSmall;
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(4);
}
repeat(1 + random(bullets)) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(8, edir), y - 3 + random(6) + lengthdir_y(8, edir), objBloodDrop);
    my_id.image_xscale = 1 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = point_direction(x + lengthdir_x(8, edir), y + lengthdir_y(8, edir), my_id.x, my_id.y);
    my_id.direction = my_id.image_angle;
    my_id.speed = 1 + random(5);
}
repeat(bullets) {
    my_id = instance_create(x - 3 + random(6) + lengthdir_x(16, edir), y - 3 + random(6) + lengthdir_y(16, edir), objBloodSmoke);
    my_id.image_xscale = 1.2 - random(0.2);
    my_id.image_yscale = my_id.image_xscale;
    my_id.image_angle = edir - 20 + random(40);
    my_id.direction = my_id.image_angle;
    my_id.speed = 2 + random(1);
    my_id.friction = 0.15;
}
if (bullets &gt; 1 || round(random(1)) || energie &lt; 0) {
    my_id = instance_create(x + lengthdir_x(12, dir - 45), y + lengthdir_y(12, dir - 45), objDeadBody);
    if (bullets &gt; 1) {
        my_id.sprite_index = choose(sprEBackShotgun, sprEBackShotgun, sprEFrontShotgun);
    } else my_id.sprite_index = choose(sprEBackMachinegun, sprEBackMachinegun, sprEFrontMachinegun);
    my_id.direction = edir - 8 + random(16);
    my_id.speed = 1.5 + random(1) + bullets * 0.15;
    my_id.image_angle = my_id.direction;
    instance_destroy();

    my_id = instance_create(x, y, objPlayerDead);
    if (bullets &gt; 1) {
        my_id.sprite_index = sprPBackShotgun;
    } else my_id.sprite_index = sprPBackMachinegun;
    my_id.image_index = 1 + floor(random(4));
    my_id.direction = edir;
    my_id.speed = 1.5 + random(1) + bullets * 0.15;
    my_id.image_angle = my_id.direction;
    my_id = instance_create(x + lengthdir_x(24, edir), y + lengthdir_y(24, edir), objMaskDrop);
    my_id.direction = edir - 40 + random(80);
    my_id.speed = 1.5 + random(1);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (energie &lt; 9) {
    // do nothing
} else {
    if (persistent &amp;&amp; objEffector.fade) {
        nothing = 1
    } else {
        if (sprite_index == sprShieldSnapUzi or sprite_index == sprShieldSnapMP5 or sprite_index == sprShieldSnapDoubleBarrel or sprite_index == sprShieldSnapSilencer or sprite_index == sprShieldSnapScorpion or sprite_index == sprShieldSnapMagnum) {
            // do nothing
        } else {
            if (instance_exists(objMaskMenu)) {
                // do nothing
            } else {
                scrMoveSolidOn();
                if (place_free(x, y - 2)) {
                    y -= 2;
                } else {
                    if (place_free(x - 8, y - 2)) {
                        x -= 2;
                    } else {
                        if (place_free(x + 8, y - 2)) {
                            x += 2;
                        }
                    }
                }
                if (image_speed == 0)
                    image_index += 0.1;
                legindex += 0.25;
                legindex2 += 0.25;
                legdir = 90;
                if (keyboard_check(ord('A')))
                    legdir = 135;
                if (keyboard_check(ord('D')))
                    legdir = 45;

                scrMoveSolidOff();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (energie &lt; 9) {
    // do nothing
} else {
    if (persistent &amp;&amp; objEffector.fade) {
        nothing = 1
    } else {
        if (sprite_index == sprShieldSnapUzi or sprite_index == sprShieldSnapMP5 or sprite_index == sprShieldSnapDoubleBarrel or sprite_index == sprShieldSnapSilencer or sprite_index == sprShieldSnapScorpion or sprite_index == sprShieldSnapMagnum) {
            // do nothing
        } else {
            if (instance_exists(objMaskMenu)) {
                // do nothing
            } else {
                scrMoveSolidOn();
                if (place_free(x, y + 2)) {
                    y += 2;
                } else {
                    if (place_free(x - 8, y + 2)) {
                        x -= 2
                    } else {
                        if (place_free(x + 8, y + 2)) {
                            x += 2;
                        }
                    }
                }
                if (image_speed == 0)
                    image_index += 0.1;
                legindex += 0.25;
                legindex2 += 0.25;
                legdir = 270;
                if (keyboard_check(ord('A')))
                    legdir = 225;
                if (keyboard_check(ord('D')))
                    legdir = 315;

                scrMoveSolidOff();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (energie &lt; 9) {
    // do nothing
} else {
    if (persistent &amp;&amp; objEffector.fade) {
        nothing = 1
    } else {
        if (sprite_index == sprShieldSnapUzi or sprite_index == sprShieldSnapMP5 or sprite_index == sprShieldSnapDoubleBarrel or sprite_index == sprShieldSnapSilencer or sprite_index == sprShieldSnapScorpion or sprite_index == sprShieldSnapMagnum) {
            // do nothing
        } else {
            if (instance_exists(objMaskMenu)) {
                // do nothing
            } else {
                scrMoveSolidOn();
                if (place_free(x + 2, y)) {
                    x += 2;
                } else {
                    if (place_free(x + 2, y - 8)) {
                        y -= 2;
                    } else {
                        if (place_free(x + 2, y + 8))
                            y += 2;
                    }
                }
                if (image_speed == 0)
                    image_index += 0.1;
                legindex += 0.25;
                legindex2 += 0.25;
                legdir = 0;
                if (keyboard_check(ord('W')))
                    legdir = 45;
                if (keyboard_check(ord('S')))
                    legdir = 315;

                scrMoveSolidOff();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (energie &lt; 9) {
    // do nothing
} else {
    if (persistent &amp;&amp; objEffector.fade) {
        nothing = 1
    } else {
        if (sprite_index == sprShieldSnapUzi or sprite_index == sprShieldSnapMP5 or sprite_index == sprShieldSnapDoubleBarrel or sprite_index == sprShieldSnapSilencer or sprite_index == sprShieldSnapScorpion or sprite_index == sprShieldSnapMagnum) {
            // do nothing
        } else {
            if (instance_exists(objMaskMenu)) {
                // do nothing
            } else {
                scrMoveSolidOn();
                if (place_free(x - 2, y)) {
                    x -= 2;
                } else {
                    if (place_free(x - 2, y - 8)) {
                        y -= 2;
                    } else {
                        if (place_free(x - 2, y + 8))
                            y += 2;
                    }
                }
                if (image_speed == 0)
                    image_index += 0.1;
                legindex += 0.25;
                legindex2 += 0.25;
                legdir = 180;
                if (keyboard_check(ord('W')))
                    legdir = 135;
                if (keyboard_check(ord('S')))
                    legdir = 225;

                scrMoveSolidOff();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox == 0)
    scrPlayerDropShield();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox == 0)
    scrPlayerShieldShoot();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlayerShieldAnimationEnd();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent) {
    if (move) {
        move = 0;
        x += movex;
        y += movey;
        xview += movex;
        yview += movey;
    }
    view_xview[0] = xview;
    view_yview[0] = yview;
    alarm[0] = 36;
} else {
    view_angle[0] = 1;
    view_xview[0] = x - view_wview[0] / 2;
    view_yview[0] = y - view_hview[0] / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (persistent)
    exit;
if (sprite_index == last_sprite) {
    // do nothing
} else {
    scrUpdateMaskPos(sprite_index);
    last_sprite = sprite_index;
}
left = 1;
draw_set_blend_mode(bm_add);
lastdir = dir;
dir = scrRotate(dir, point_direction(x, y, global.mousex, global.mousey), 6);
draw_circle_color(x, y, 48 + random(6) + light, make_color_hsv(0, 0, 30 + light * 2), c_black, 0);
draw_set_blend_mode(bm_normal);
draw_sprite_ext(sprLegs, legindex, x + 1, y + 1, image_xscale, image_yscale, legdir, c_black, 0.5);
draw_sprite_ext(sprLegs, legindex2, x + lengthdir_x(7, dir - 45) + 1, y + lengthdir_y(7, dir - 45) + 1, image_xscale, image_yscale, legdir, c_black, 0.5);
draw_sprite_ext(sprite_index, image_index, x + 1, y + 1, image_xscale, image_yscale * left, dir, c_black, 0.5);
draw_sprite_ext(sprLegs, legindex, x, y, image_xscale, image_yscale, legdir, image_blend, image_alpha);
draw_sprite_ext(sprLegs, legindex2, x + lengthdir_x(7, dir - 45), y + lengthdir_y(7, dir - 45), image_xscale, image_yscale, legdir, image_blend, image_alpha);
if (dir == lastdir || energie &lt; 9) {
    // do nothing
} else legindex2 += 0.05;

draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale * left, dir, image_blend, image_alpha);

if (reload &gt; 0)
    reload--;
if (light &gt; 3)
    light -= 3;
if (maskon)
    scrDrawMask(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aim = !aim;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.xbox)
    exit;
aim = !aim;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
