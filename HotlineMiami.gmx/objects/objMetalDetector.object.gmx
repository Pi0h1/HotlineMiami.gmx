<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMetalDetector</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
on = 0;
wait = 0;
global.alarmsound = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (wait &gt; 0) {
    wait--;
    if (wait == 0) {
        on = 0;
        global.test = 0;
        with (objMetalDetector) {
            if (on)
                global.test = 1
        }
        if (!global.test) {
            audio_stop_sound(sndAlarm);
            global.alarmsound = 0;
        }
    }
}
if (place_meeting(x, y, objPlayer)) {
    if (objPlayer.sprite_index == sprPWalkUnarmed || objPlayer.sprite_index == sprPWalkBat || objPlayer.sprite_index == sprPWalkPool || objPlayer.sprite_index == sprPWalkPoolBroke || objPlayer.sprite_index == sprPAttackThrow || objPlayer.sprite_index == sprPAttackPunch || objPlayer.sprite_index == sprPAttackBat || objPlayer.sprite_index == sprPAttackPool || objPlayer.sprite_index == sprPAttackPoolBroke || objPlayer.sprite_index == sprPWalkNightStick || objPlayer.sprite_index == sprPAttackNightStick) {
        // do nothing
    } else {
        if (objPlayer.sprite_index == sprPWalkThrow) {
            if (objPlayer.throwindex &gt;= 1 &amp;&amp; objPlayer.throwindex &lt;= 3) {
                // do nothing
            } else {
                if (!on) {
                    if (!global.alarmsound) {
                        audio_play_sound(sndAlarm, 0, false);
                        global.alarmsound = 1;
                    }
                    on = 1;
                    scrHearPlayer();
                }
                wait = 180;
            }
        } else {
            if (!on) {
                if (!global.alarmsound) {
                    audio_play_sound(sndAlarm, 0, false);
                    global.alarmsound = 1;
                }
                on = 1;
                scrHearPlayer();
            }
            wait = 180;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (on) {
    sprite_index = sprMetalDetectorAlarm;
    image_speed = 0.25;
} else {
    sprite_index = sprMetalDetector;
    image_speed = 0;
}
draw_sprite_ext(sprite_index, image_index, x + 2, y + 3, image_xscale, image_yscale, image_angle, c_black, 0.5);
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
