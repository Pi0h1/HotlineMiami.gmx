/// PEd_matrixInverse(matrix)
/** 
 * @brief Calculates the inverse matrix of the given matrix.
 * @param {matrix} matrix The matrix to calculate the inverse matrix of.
 * @return {matrix} The inverse matrix.
 */
var _m = argument0;
var _i;
_i[15] = _m[ 1]*_m[ 6]*_m[ 8] - _m[ 2]*_m[ 5]*_m[ 8] + _m[ 2]*_m[ 4]*_m[ 9] - _m[ 0]*_m[ 6]*_m[ 9] - _m[ 1]*_m[ 4]*_m[10] + _m[ 0]*_m[ 5]*_m[10];
_i[ 0] = _m[ 6]*_m[11]*_m[13] - _m[ 7]*_m[10]*_m[13] + _m[ 7]*_m[ 9]*_m[14] - _m[ 5]*_m[11]*_m[14] - _m[ 6]*_m[ 9]*_m[15] + _m[ 5]*_m[10]*_m[15];
_i[ 1] = _m[ 3]*_m[10]*_m[13] - _m[ 2]*_m[11]*_m[13] - _m[ 3]*_m[ 9]*_m[14] + _m[ 1]*_m[11]*_m[14] + _m[ 2]*_m[ 9]*_m[15] - _m[ 1]*_m[10]*_m[15];
_i[ 2] = _m[ 2]*_m[ 7]*_m[13] - _m[ 3]*_m[ 6]*_m[13] + _m[ 3]*_m[ 5]*_m[14] - _m[ 1]*_m[ 7]*_m[14] - _m[ 2]*_m[ 5]*_m[15] + _m[ 1]*_m[ 6]*_m[15];
_i[ 3] = _m[ 3]*_m[ 6]*_m[ 9] - _m[ 2]*_m[ 7]*_m[ 9] - _m[ 3]*_m[ 5]*_m[10] + _m[ 1]*_m[ 7]*_m[10] + _m[ 2]*_m[ 5]*_m[11] - _m[ 1]*_m[ 6]*_m[11];
_i[ 4] = _m[ 7]*_m[10]*_m[12] - _m[ 6]*_m[11]*_m[12] - _m[ 7]*_m[ 8]*_m[14] + _m[ 4]*_m[11]*_m[14] + _m[ 6]*_m[ 8]*_m[15] - _m[ 4]*_m[10]*_m[15];
_i[ 5] = _m[ 2]*_m[11]*_m[12] - _m[ 3]*_m[10]*_m[12] + _m[ 3]*_m[ 8]*_m[14] - _m[ 0]*_m[11]*_m[14] - _m[ 2]*_m[ 8]*_m[15] + _m[ 0]*_m[10]*_m[15];
_i[ 6] = _m[ 3]*_m[ 6]*_m[12] - _m[ 2]*_m[ 7]*_m[12] - _m[ 3]*_m[ 4]*_m[14] + _m[ 0]*_m[ 7]*_m[14] + _m[ 2]*_m[ 4]*_m[15] - _m[ 0]*_m[ 6]*_m[15];
_i[ 7] = _m[ 2]*_m[ 7]*_m[ 8] - _m[ 3]*_m[ 6]*_m[ 8] + _m[ 3]*_m[ 4]*_m[10] - _m[ 0]*_m[ 7]*_m[10] - _m[ 2]*_m[ 4]*_m[11] + _m[ 0]*_m[ 6]*_m[11];
_i[ 8] = _m[ 5]*_m[11]*_m[12] - _m[ 7]*_m[ 9]*_m[12] + _m[ 7]*_m[ 8]*_m[13] - _m[ 4]*_m[11]*_m[13] - _m[ 5]*_m[ 8]*_m[15] + _m[ 4]*_m[ 9]*_m[15];
_i[ 9] = _m[ 3]*_m[ 9]*_m[12] - _m[ 1]*_m[11]*_m[12] - _m[ 3]*_m[ 8]*_m[13] + _m[ 0]*_m[11]*_m[13] + _m[ 1]*_m[ 8]*_m[15] - _m[ 0]*_m[ 9]*_m[15];
_i[10] = _m[ 1]*_m[ 7]*_m[12] - _m[ 3]*_m[ 5]*_m[12] + _m[ 3]*_m[ 4]*_m[13] - _m[ 0]*_m[ 7]*_m[13] - _m[ 1]*_m[ 4]*_m[15] + _m[ 0]*_m[ 5]*_m[15];
_i[11] = _m[ 3]*_m[ 5]*_m[ 8] - _m[ 1]*_m[ 7]*_m[ 8] - _m[ 3]*_m[ 4]*_m[ 9] + _m[ 0]*_m[ 7]*_m[ 9] + _m[ 1]*_m[ 4]*_m[11] - _m[ 0]*_m[ 5]*_m[11];
_i[12] = _m[ 6]*_m[ 9]*_m[12] - _m[ 5]*_m[10]*_m[12] - _m[ 6]*_m[ 8]*_m[13] + _m[ 4]*_m[10]*_m[13] + _m[ 5]*_m[ 8]*_m[14] - _m[ 4]*_m[ 9]*_m[14];
_i[13] = _m[ 1]*_m[10]*_m[12] - _m[ 2]*_m[ 9]*_m[12] + _m[ 2]*_m[ 8]*_m[13] - _m[ 0]*_m[10]*_m[13] - _m[ 1]*_m[ 8]*_m[14] + _m[ 0]*_m[ 9]*_m[14];
_i[14] = _m[ 2]*_m[ 5]*_m[12] - _m[ 1]*_m[ 6]*_m[12] - _m[ 2]*_m[ 4]*_m[13] + _m[ 0]*_m[ 6]*_m[13] + _m[ 1]*_m[ 4]*_m[14] - _m[ 0]*_m[ 5]*_m[14];
return PEd_matrixScale(_i, 1 / PEd_matrixDeterminant(_m));
