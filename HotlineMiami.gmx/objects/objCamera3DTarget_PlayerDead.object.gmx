<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objCamera3DTarget</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

targetdir = 0;

time = 60 * 6;
timer = time;


midx = room_width / 2;
midy = room_height / 2;

var _left = room_width;
var _right = 0;
var _top = room_height;
var _bottom = 0;
with objWall
{
    _left = min( _left, bbox_left );
    _right = max( _right, bbox_right );
    _top = min( _top, bbox_top );
    _bottom = max( _bottom, bbox_bottom );
}
midx = _left + ( _right / 2 );
midy = _top + ( _bottom / 2 );

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( instance_exists( objPlayerDead ) )
{
    targetdir = objPlayerDead.image_angle;
}



pitch = lerp( pitch, 90, 0.025 );

timer = max( 0, timer - 1 );
var amount = dcos( lerp( 0, 90, ( timer / time ) ) );

fov = lerp( objCamera3D.fov_desired, 16, amount );
z = lerp( z, -360 / ( fov / objCamera3D.fov_desired ), 0.005 );

// angle += lerp( 0, 1, amount );

var pull = 0.01 * power( amount, 24 );
x = lerp( x, midx, pull );
y = lerp( y, midy, pull );

angle -= ( angle_difference( angle, 90 ) * pull );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
